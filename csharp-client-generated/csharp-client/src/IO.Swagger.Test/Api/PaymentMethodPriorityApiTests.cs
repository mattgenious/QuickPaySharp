/* 
 * Quickpay API v10
 *
 * <h2 id=\"authorization\">Authorization</h2>  Authorization is done using basic-auth. Authorization can be done with a user or an agreement.  <ul>   <li>When authorized with a user one is able to edit own settings, create new merchant or request access to existing merchant.</li>   <li>When authorized with an agreement one is able to perform anything on the account that agreement gives permissions to.</li> </ul>  
 *
 * OpenAPI spec version: 10.0
 * Contact: support@quickpay.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PaymentMethodPriorityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PaymentMethodPriorityApiTests
    {
        private PaymentMethodPriorityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PaymentMethodPriorityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentMethodPriorityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PaymentMethodPriorityApi
            //Assert.IsInstanceOfType(typeof(PaymentMethodPriorityApi), instance, "instance is a PaymentMethodPriorityApi");
        }

        
        /// <summary>
        /// Test GETPaymentMethodPriorityFormat
        /// </summary>
        [Test]
        public void GETPaymentMethodPriorityFormatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string acceptVersion = null;
            //string authorization = null;
            //var response = instance.GETPaymentMethodPriorityFormat(acceptVersion, authorization);
            //Assert.IsInstanceOf<PaymentMethodPriority> (response, "response is PaymentMethodPriority");
        }
        
        /// <summary>
        /// Test POSTPaymentMethodPriorityFormat
        /// </summary>
        [Test]
        public void POSTPaymentMethodPriorityFormatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string acceptVersion = null;
            //string authorization = null;
            //string paymentMethodPriority = null;
            //instance.POSTPaymentMethodPriorityFormat(acceptVersion, authorization, paymentMethodPriority);
            
        }
        
    }

}
