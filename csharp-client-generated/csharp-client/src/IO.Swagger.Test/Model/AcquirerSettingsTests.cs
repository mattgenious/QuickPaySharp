/* 
 * Quickpay API v10
 *
 * <h2 id=\"authorization\">Authorization</h2>  Authorization is done using basic-auth. Authorization can be done with a user or an agreement.  <ul>   <li>When authorized with a user one is able to edit own settings, create new merchant or request access to existing merchant.</li>   <li>When authorized with an agreement one is able to perform anything on the account that agreement gives permissions to.</li> </ul>  
 *
 * OpenAPI spec version: 10.0
 * Contact: support@quickpay.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AcquirerSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class AcquirerSettingsTests
    {
        // TODO uncomment below to declare an instance variable for AcquirerSettings
        //private AcquirerSettings instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of AcquirerSettings
            //instance = new AcquirerSettings();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AcquirerSettings
        /// </summary>
        [Test]
        public void AcquirerSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" AcquirerSettings
            //Assert.IsInstanceOfType<AcquirerSettings> (instance, "variable 'instance' is a AcquirerSettings");
        }


        /// <summary>
        /// Test the property 'Bambora'
        /// </summary>
        [Test]
        public void BamboraTest()
        {
            // TODO unit test for the property 'Bambora'
        }
        /// <summary>
        /// Test the property 'Clearhaus'
        /// </summary>
        [Test]
        public void ClearhausTest()
        {
            // TODO unit test for the property 'Clearhaus'
        }
        /// <summary>
        /// Test the property 'Coinify'
        /// </summary>
        [Test]
        public void CoinifyTest()
        {
            // TODO unit test for the property 'Coinify'
        }
        /// <summary>
        /// Test the property 'Elavon'
        /// </summary>
        [Test]
        public void ElavonTest()
        {
            // TODO unit test for the property 'Elavon'
        }
        /// <summary>
        /// Test the property 'Handelsbanken'
        /// </summary>
        [Test]
        public void HandelsbankenTest()
        {
            // TODO unit test for the property 'Handelsbanken'
        }
        /// <summary>
        /// Test the property 'Klarna'
        /// </summary>
        [Test]
        public void KlarnaTest()
        {
            // TODO unit test for the property 'Klarna'
        }
        /// <summary>
        /// Test the property 'Klarnapayments'
        /// </summary>
        [Test]
        public void KlarnapaymentsTest()
        {
            // TODO unit test for the property 'Klarnapayments'
        }
        /// <summary>
        /// Test the property 'Mobilepay'
        /// </summary>
        [Test]
        public void MobilepayTest()
        {
            // TODO unit test for the property 'Mobilepay'
        }
        /// <summary>
        /// Test the property 'Mobilepayonline'
        /// </summary>
        [Test]
        public void MobilepayonlineTest()
        {
            // TODO unit test for the property 'Mobilepayonline'
        }
        /// <summary>
        /// Test the property 'Mobilepaysubscriptions'
        /// </summary>
        [Test]
        public void MobilepaysubscriptionsTest()
        {
            // TODO unit test for the property 'Mobilepaysubscriptions'
        }
        /// <summary>
        /// Test the property 'Nets'
        /// </summary>
        [Test]
        public void NetsTest()
        {
            // TODO unit test for the property 'Nets'
        }
        /// <summary>
        /// Test the property 'Paypal'
        /// </summary>
        [Test]
        public void PaypalTest()
        {
            // TODO unit test for the property 'Paypal'
        }
        /// <summary>
        /// Test the property 'Paysafecard'
        /// </summary>
        [Test]
        public void PaysafecardTest()
        {
            // TODO unit test for the property 'Paysafecard'
        }
        /// <summary>
        /// Test the property 'Resurs'
        /// </summary>
        [Test]
        public void ResursTest()
        {
            // TODO unit test for the property 'Resurs'
        }
        /// <summary>
        /// Test the property 'Sofort'
        /// </summary>
        [Test]
        public void SofortTest()
        {
            // TODO unit test for the property 'Sofort'
        }
        /// <summary>
        /// Test the property 'Swedbank'
        /// </summary>
        [Test]
        public void SwedbankTest()
        {
            // TODO unit test for the property 'Swedbank'
        }
        /// <summary>
        /// Test the property 'Swish'
        /// </summary>
        [Test]
        public void SwishTest()
        {
            // TODO unit test for the property 'Swish'
        }
        /// <summary>
        /// Test the property 'Teller'
        /// </summary>
        [Test]
        public void TellerTest()
        {
            // TODO unit test for the property 'Teller'
        }
        /// <summary>
        /// Test the property 'Trustly'
        /// </summary>
        [Test]
        public void TrustlyTest()
        {
            // TODO unit test for the property 'Trustly'
        }
        /// <summary>
        /// Test the property 'Valitor'
        /// </summary>
        [Test]
        public void ValitorTest()
        {
            // TODO unit test for the property 'Valitor'
        }
        /// <summary>
        /// Test the property 'Viabill'
        /// </summary>
        [Test]
        public void ViabillTest()
        {
            // TODO unit test for the property 'Viabill'
        }
        /// <summary>
        /// Test the property 'Vipps'
        /// </summary>
        [Test]
        public void VippsTest()
        {
            // TODO unit test for the property 'Vipps'
        }

    }

}
