/* 
 * Quickpay API v10
 *
 * <h2 id=\"authorization\">Authorization</h2>  <p>Authorization is done using basic-auth. Authorization can be done with a user or an agreement.</p>  <ul>   <li>When authorized with a user one is able to edit own settings, create new merchant or request access to existing merchant.</li>   <li>When authorized with an agreement one is able to perform anything on the account that agreement gives permissions to.</li> </ul>  
 *
 * OpenAPI spec version: 10.0
 * Contact: support@quickpay.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing QuickPayProtocolV10Metadata
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class QuickPayProtocolV10MetadataTests
    {
        // TODO uncomment below to declare an instance variable for QuickPayProtocolV10Metadata
        //private QuickPayProtocolV10Metadata instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of QuickPayProtocolV10Metadata
            //instance = new QuickPayProtocolV10Metadata();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QuickPayProtocolV10Metadata
        /// </summary>
        [Test]
        public void QuickPayProtocolV10MetadataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" QuickPayProtocolV10Metadata
            //Assert.IsInstanceOfType<QuickPayProtocolV10Metadata> (instance, "variable 'instance' is a QuickPayProtocolV10Metadata");
        }


        /// <summary>
        /// Test the property 'Bin'
        /// </summary>
        [Test]
        public void BinTest()
        {
            // TODO unit test for the property 'Bin'
        }
        /// <summary>
        /// Test the property 'Brand'
        /// </summary>
        [Test]
        public void BrandTest()
        {
            // TODO unit test for the property 'Brand'
        }
        /// <summary>
        /// Test the property 'Corporate'
        /// </summary>
        [Test]
        public void CorporateTest()
        {
            // TODO unit test for the property 'Corporate'
        }
        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Test]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }
        /// <summary>
        /// Test the property 'CustomerCountry'
        /// </summary>
        [Test]
        public void CustomerCountryTest()
        {
            // TODO unit test for the property 'CustomerCountry'
        }
        /// <summary>
        /// Test the property 'CustomerIp'
        /// </summary>
        [Test]
        public void CustomerIpTest()
        {
            // TODO unit test for the property 'CustomerIp'
        }
        /// <summary>
        /// Test the property 'ExpMonth'
        /// </summary>
        [Test]
        public void ExpMonthTest()
        {
            // TODO unit test for the property 'ExpMonth'
        }
        /// <summary>
        /// Test the property 'ExpYear'
        /// </summary>
        [Test]
        public void ExpYearTest()
        {
            // TODO unit test for the property 'ExpYear'
        }
        /// <summary>
        /// Test the property 'FraudRemarks'
        /// </summary>
        [Test]
        public void FraudRemarksTest()
        {
            // TODO unit test for the property 'FraudRemarks'
        }
        /// <summary>
        /// Test the property 'FraudReportDescription'
        /// </summary>
        [Test]
        public void FraudReportDescriptionTest()
        {
            // TODO unit test for the property 'FraudReportDescription'
        }
        /// <summary>
        /// Test the property 'FraudReported'
        /// </summary>
        [Test]
        public void FraudReportedTest()
        {
            // TODO unit test for the property 'FraudReported'
        }
        /// <summary>
        /// Test the property 'FraudReportedAt'
        /// </summary>
        [Test]
        public void FraudReportedAtTest()
        {
            // TODO unit test for the property 'FraudReportedAt'
        }
        /// <summary>
        /// Test the property 'FraudSuspected'
        /// </summary>
        [Test]
        public void FraudSuspectedTest()
        {
            // TODO unit test for the property 'FraudSuspected'
        }
        /// <summary>
        /// Test the property 'Hash'
        /// </summary>
        [Test]
        public void HashTest()
        {
            // TODO unit test for the property 'Hash'
        }
        /// <summary>
        /// Test the property 'Is3dSecure'
        /// </summary>
        [Test]
        public void Is3dSecureTest()
        {
            // TODO unit test for the property 'Is3dSecure'
        }
        /// <summary>
        /// Test the property 'IssuedTo'
        /// </summary>
        [Test]
        public void IssuedToTest()
        {
            // TODO unit test for the property 'IssuedTo'
        }
        /// <summary>
        /// Test the property 'Last4'
        /// </summary>
        [Test]
        public void Last4Test()
        {
            // TODO unit test for the property 'Last4'
        }
        /// <summary>
        /// Test the property 'NinCountryCode'
        /// </summary>
        [Test]
        public void NinCountryCodeTest()
        {
            // TODO unit test for the property 'NinCountryCode'
        }
        /// <summary>
        /// Test the property 'NinGender'
        /// </summary>
        [Test]
        public void NinGenderTest()
        {
            // TODO unit test for the property 'NinGender'
        }
        /// <summary>
        /// Test the property 'NinNumber'
        /// </summary>
        [Test]
        public void NinNumberTest()
        {
            // TODO unit test for the property 'NinNumber'
        }
        /// <summary>
        /// Test the property 'Number'
        /// </summary>
        [Test]
        public void NumberTest()
        {
            // TODO unit test for the property 'Number'
        }
        /// <summary>
        /// Test the property 'Origin'
        /// </summary>
        [Test]
        public void OriginTest()
        {
            // TODO unit test for the property 'Origin'
        }
        /// <summary>
        /// Test the property 'ShopsystemName'
        /// </summary>
        [Test]
        public void ShopsystemNameTest()
        {
            // TODO unit test for the property 'ShopsystemName'
        }
        /// <summary>
        /// Test the property 'ShopsystemVersion'
        /// </summary>
        [Test]
        public void ShopsystemVersionTest()
        {
            // TODO unit test for the property 'ShopsystemVersion'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
