/* 
 * Quickpay API v10
 *
 * <h2 id=\"authorization\">Authorization</h2>  <p>Authorization is done using basic-auth. Authorization can be done with a user or an agreement.</p>  <ul>   <li>When authorized with a user one is able to edit own settings, create new merchant or request access to existing merchant.</li>   <li>When authorized with an agreement one is able to perform anything on the account that agreement gives permissions to.</li> </ul>  
 *
 * OpenAPI spec version: 10.0
 * Contact: support@quickpay.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing QuickPayProtocolV10Operation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class QuickPayProtocolV10OperationTests
    {
        // TODO uncomment below to declare an instance variable for QuickPayProtocolV10Operation
        //private QuickPayProtocolV10Operation instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of QuickPayProtocolV10Operation
            //instance = new QuickPayProtocolV10Operation();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of QuickPayProtocolV10Operation
        /// </summary>
        [Test]
        public void QuickPayProtocolV10OperationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" QuickPayProtocolV10Operation
            //Assert.IsInstanceOfType<QuickPayProtocolV10Operation> (instance, "variable 'instance' is a QuickPayProtocolV10Operation");
        }


        /// <summary>
        /// Test the property '_3dSecureStatus'
        /// </summary>
        [Test]
        public void _3dSecureStatusTest()
        {
            // TODO unit test for the property '_3dSecureStatus'
        }
        /// <summary>
        /// Test the property 'Acquirer'
        /// </summary>
        [Test]
        public void AcquirerTest()
        {
            // TODO unit test for the property 'Acquirer'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Test]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'AqStatusCode'
        /// </summary>
        [Test]
        public void AqStatusCodeTest()
        {
            // TODO unit test for the property 'AqStatusCode'
        }
        /// <summary>
        /// Test the property 'AqStatusMsg'
        /// </summary>
        [Test]
        public void AqStatusMsgTest()
        {
            // TODO unit test for the property 'AqStatusMsg'
        }
        /// <summary>
        /// Test the property 'CallbackAt'
        /// </summary>
        [Test]
        public void CallbackAtTest()
        {
            // TODO unit test for the property 'CallbackAt'
        }
        /// <summary>
        /// Test the property 'CallbackDuration'
        /// </summary>
        [Test]
        public void CallbackDurationTest()
        {
            // TODO unit test for the property 'CallbackDuration'
        }
        /// <summary>
        /// Test the property 'CallbackResponseCode'
        /// </summary>
        [Test]
        public void CallbackResponseCodeTest()
        {
            // TODO unit test for the property 'CallbackResponseCode'
        }
        /// <summary>
        /// Test the property 'CallbackSuccess'
        /// </summary>
        [Test]
        public void CallbackSuccessTest()
        {
            // TODO unit test for the property 'CallbackSuccess'
        }
        /// <summary>
        /// Test the property 'CallbackUrl'
        /// </summary>
        [Test]
        public void CallbackUrlTest()
        {
            // TODO unit test for the property 'CallbackUrl'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Test]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Pending'
        /// </summary>
        [Test]
        public void PendingTest()
        {
            // TODO unit test for the property 'Pending'
        }
        /// <summary>
        /// Test the property 'QpStatusCode'
        /// </summary>
        [Test]
        public void QpStatusCodeTest()
        {
            // TODO unit test for the property 'QpStatusCode'
        }
        /// <summary>
        /// Test the property 'QpStatusMsg'
        /// </summary>
        [Test]
        public void QpStatusMsgTest()
        {
            // TODO unit test for the property 'QpStatusMsg'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
