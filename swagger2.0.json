{
  "host": "api.quickpay.net",
  "basePath": "/docs/v10/merchant",
  "schemes": ["https"],
  "swagger": "2.0",
  "info": {
    "title": "Quickpay API v10",
    "version": "10.0",
    "description": "<h2 id=\"authorization\">Authorization</h2>\n\n<p>Authorization is done using basic-auth. Authorization can be done with a user or an agreement.</p>\n\n<ul>\n  <li>When authorized with a user one is able to edit own settings, create new merchant or request access to existing merchant.</li>\n  <li>When authorized with an agreement one is able to perform anything on the account that agreement gives permissions to.</li>\n</ul>\n\n",
    "contact": {
      "email": "support@quickpay.net"
    },
    "termsOfService": "http://quickpay.net/terms"
  },
  "tags": [
    {
      "name": "account",
      "description": "Operations about accounts"
    },
    {
      "name": "acl-resources",
      "description": "Operations about acl-resources"
    },
    {
      "name": "acquirers",
      "description": "Operations about acquirers"
    },
    {
      "name": "activity",
      "description": "Operations about activities"
    },
    {
      "name": "agreements",
      "description": "Operations about agreements"
    },
    {
      "name": "brandings",
      "description": "Operations about brandings"
    },
    {
      "name": "cards",
      "description": "Operations about cards"
    },
    {
      "name": "changelog",
      "description": "Operations about changelogs"
    },
    {
      "name": "cryptography",
      "description": "Operations about cryptographies"
    },
    {
      "name": "fees",
      "description": "Operations about fees"
    },
    {
      "name": "fraud-rulesets",
      "description": "Operations about fraud-rulesets"
    },
    {
      "name": "operational-status",
      "description": "Operations about operational-statuses"
    },
    {
      "name": "payment-method-priority",
      "description": "Operations about payment-method-priorities"
    },
    {
      "name": "payments",
      "description": "Operations about payments"
    },
    {
      "name": "payouts",
      "description": "Operations about payouts"
    },
    {
      "name": "ping",
      "description": "Operations about pings"
    },
    {
      "name": "subscription-groups",
      "description": "Operations about subscription-groups"
    },
    {
      "name": "subscriptions",
      "description": "Operations about subscriptions"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "GET-account---format-",
        "summary": "Get merchant account",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Merchant"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "PATCH-account---format-",
        "summary": "Update merchant account",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "customer_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "customer_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "customer_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "customer_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "customer_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "customer_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "customer_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "customer_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "billing_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "billing_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "billing_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "billing_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "billing_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "billing_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "billing_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "billing_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Callback url</p>\n",
            "name": "callback_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Bambora payments</p>\n",
            "name": "acquirer_settings[bambora][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Bambora identification number</p>\n",
            "name": "acquirer_settings[bambora][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Bambora international identification number</p>\n",
            "name": "acquirer_settings[bambora][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Bambora)</p>\n",
            "name": "acquirer_settings[bambora][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Bambora)</p>\n",
            "name": "acquirer_settings[bambora][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Bambora)</p>\n",
            "name": "acquirer_settings[bambora][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Bambora)</p>\n",
            "name": "acquirer_settings[bambora][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "acquirer_settings[bambora][securepay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[bambora][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[bambora][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[bambora][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[bambora][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable ClearHaus payments</p>\n",
            "name": "acquirer_settings[clearhaus][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Clearhaus API key (is required but may be left empty)</p>\n",
            "name": "acquirer_settings[clearhaus][api_key]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Clearhaus)</p>\n",
            "name": "acquirer_settings[clearhaus][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable payouts (requires agreement with Clearhaus)</p>\n",
            "name": "acquirer_settings[clearhaus][payout]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Apple Pay (requires agreement with Clearhaus)</p>\n",
            "name": "acquirer_settings[clearhaus][apple_pay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Elavon payments</p>\n",
            "name": "acquirer_settings[elavon][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Elavon identification number</p>\n",
            "name": "acquirer_settings[elavon][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Elavon international identification number</p>\n",
            "name": "acquirer_settings[elavon][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Elavon)</p>\n",
            "name": "acquirer_settings[elavon][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Elavon)</p>\n",
            "name": "acquirer_settings[elavon][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Elavon)</p>\n",
            "name": "acquirer_settings[elavon][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Elavon)</p>\n",
            "name": "acquirer_settings[elavon][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "acquirer_settings[elavon][securepay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[elavon][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[elavon][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[elavon][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[elavon][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Handelsbanken payments</p>\n",
            "name": "acquirer_settings[handelsbanken][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Handelsbanken identification number</p>\n",
            "name": "acquirer_settings[handelsbanken][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Handelsbanken international identification number</p>\n",
            "name": "acquirer_settings[handelsbanken][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Handelsbanken)</p>\n",
            "name": "acquirer_settings[handelsbanken][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Handelsbanken)</p>\n",
            "name": "acquirer_settings[handelsbanken][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Handelsbanken)</p>\n",
            "name": "acquirer_settings[handelsbanken][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Handelsbanken)</p>\n",
            "name": "acquirer_settings[handelsbanken][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "acquirer_settings[handelsbanken][securepay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[handelsbanken][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[handelsbanken][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[handelsbanken][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[handelsbanken][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Klarna payments</p>\n",
            "name": "acquirer_settings[klarna][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Klarna merchant ID</p>\n",
            "name": "acquirer_settings[klarna][eid]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Klarna shared secret</p>\n",
            "name": "acquirer_settings[klarna][shared_secret]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable MobilePay payments</p>\n",
            "name": "acquirer_settings[mobilepay][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Limit MobilePay delivery address selection to theses countries. (ISO 3166-1 alpha-2 without delimiter ‘DKNOSEFI’) (Valid options are DK,NO,SE,FI)</p>\n",
            "name": "acquirer_settings[mobilepay][delivery_limited_to]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable MobilePay Subscriptions payments</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Identifier MobilePay Subscriptions uses to link requests to callbacks</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][auth_state]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Verifies received code challenge</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][code_verifier]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Unix Timestamp of last time the tokens were refreshed</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][last_token_refresh]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Associate client sessions with ID Tokens to mitigate replay attacks</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][nonce]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>0: agreement inactive, 1: flow initialised, 2: tokens received, 3: flow completed</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][pending_status]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "formData",
            "description": "<p>The provider / sales-place chosen by the merchant</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][provider]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Token to refresh access token for up to 1 year</p>\n",
            "name": "acquirer_settings[mobilepaysubscriptions][refresh_token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Nets/Teller payments</p>\n",
            "name": "acquirer_settings[nets][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Nets TOF number</p>\n",
            "name": "acquirer_settings[nets][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Nets)</p>\n",
            "name": "acquirer_settings[nets][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Nets)</p>\n",
            "name": "acquirer_settings[nets][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Forbrugsforeningen payments (requires agreement with Nets and Forbrugsforeningen)</p>\n",
            "name": "acquirer_settings[nets][fbg1886]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecuredByNets fraud protection.</p>\n",
            "name": "acquirer_settings[nets][secured_by_nets]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][securepay]",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "acquirer_settings[nets][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable PayPal payments</p>\n",
            "name": "acquirer_settings[paypal][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments</p>\n",
            "name": "acquirer_settings[paypal][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow credit-card payments. (Only for US/CA/UK merchants)</p>\n",
            "name": "acquirer_settings[paypal][credit_card]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Authentication token</p>\n",
            "name": "acquirer_settings[paypal][token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Authentication token secret</p>\n",
            "name": "acquirer_settings[paypal][token_secret]",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "description": "<p>Authentication scope</p>\n",
            "name": "acquirer_settings[paypal][scope]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort payments</p>\n",
            "name": "acquirer_settings[sofort][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Sofort customer number</p>\n",
            "name": "acquirer_settings[sofort][customer_number]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort Gateway project id</p>\n",
            "name": "acquirer_settings[sofort][project_id]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort API key</p>\n",
            "name": "acquirer_settings[sofort][api_key]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort Gateway feature</p>\n",
            "name": "acquirer_settings[sofort][gateway]",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort iDeal feature</p>\n",
            "name": "acquirer_settings[sofort][ideal]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal project id</p>\n",
            "name": "acquirer_settings[sofort][ideal_project_id]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal project password</p>\n",
            "name": "acquirer_settings[sofort][ideal_project_password]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal notification password</p>\n",
            "name": "acquirer_settings[sofort][ideal_notification_password]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Swedbank payments</p>\n",
            "name": "acquirer_settings[swedbank][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Swedbank identification number</p>\n",
            "name": "acquirer_settings[swedbank][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Swedbank international identification number</p>\n",
            "name": "acquirer_settings[swedbank][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Swedbank)</p>\n",
            "name": "acquirer_settings[swedbank][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Swedbank)</p>\n",
            "name": "acquirer_settings[swedbank][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Swedbank)</p>\n",
            "name": "acquirer_settings[swedbank][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Swedbank)</p>\n",
            "name": "acquirer_settings[swedbank][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "acquirer_settings[swedbank][securepay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[swedbank][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[swedbank][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[swedbank][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[swedbank][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Teller payments</p>\n",
            "name": "acquirer_settings[teller][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Teller TOF number</p>\n",
            "name": "acquirer_settings[teller][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller international identification number</p>\n",
            "name": "acquirer_settings[teller][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Teller)</p>\n",
            "name": "acquirer_settings[teller][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Teller)</p>\n",
            "name": "acquirer_settings[teller][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Teller)</p>\n",
            "name": "acquirer_settings[teller][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Teller)</p>\n",
            "name": "acquirer_settings[teller][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection. (disabling requires agreement with Teller)</p>\n",
            "name": "acquirer_settings[teller][securepay]",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[teller][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[teller][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[teller][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[teller][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Valitor payments</p>\n",
            "name": "acquirer_settings[valitor][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Valitor identification number</p>\n",
            "name": "acquirer_settings[valitor][identification_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Valitor international identification number</p>\n",
            "name": "acquirer_settings[valitor][identification_code_int]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Valitor)</p>\n",
            "name": "acquirer_settings[valitor][business_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Valitor)</p>\n",
            "name": "acquirer_settings[valitor][recurring]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Valitor)</p>\n",
            "name": "acquirer_settings[valitor][americanexpress]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Valitor)</p>\n",
            "name": "acquirer_settings[valitor][dinersclub]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "acquirer_settings[valitor][securepay]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[valitor][visa_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "acquirer_settings[valitor][mastercard_mpi_merchant_id]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[valitor][visa_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "acquirer_settings[valitor][mastercard_bin]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable ViaBill payments</p>\n",
            "name": "acquirer_settings[viabill][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>ViaBill API key</p>\n",
            "name": "acquirer_settings[viabill][api_key]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable e-conomic integration</p>\n",
            "name": "integration_settings[economic][active]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>e-conomic agreement no.</p>\n",
            "name": "integration_settings[economic][agreement]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>economic agreement grant token</p>\n",
            "name": "integration_settings[economic][agreement_token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ A</p>\n",
            "name": "pci[saq_a]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ A-EP</p>\n",
            "name": "pci[saq_a_ep]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ B</p>\n",
            "name": "pci[saq_b]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ B-IP</p>\n",
            "name": "pci[saq_b_ip]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ C</p>\n",
            "name": "pci[saq_c]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ C-VT</p>\n",
            "name": "pci[saq_c_vt]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ D Merchant</p>\n",
            "name": "pci[saq_d_merchant]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ D Service Provider</p>\n",
            "name": "pci[saq_d_service_provider]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SAQ P2PE-HW</p>\n",
            "name": "pci[saq_p2pe_hw]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Add automatic fee on all payments</p>\n",
            "name": "autofee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Comma separated list of default payment methods</p>\n",
            "name": "default_payment_methods",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop URL (deprecated, use shop_urls instead)</p>\n",
            "name": "shop_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "description": "<p>Shop URLs</p>\n",
            "name": "shop_urls",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "formData",
            "description": "<p>Contact email</p>\n",
            "name": "contact_email",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop name</p>\n",
            "name": "shop_name",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop system</p>\n",
            "name": "shopsystem",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<table>\n  <tbody>\n    <tr>\n      <td>Timezone UTC offsets in Zulu (+</td>\n      <td>-)hh:mm</td>\n    </tr>\n  </tbody>\n</table>\n",
            "name": "timezone",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Locale as a two letter language code</p>\n",
            "name": "locale",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Id of default branding</p>\n",
            "name": "default_branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Timestamp when logging is active</p>\n",
            "name": "logging_stops_at",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Allow test transactions</p>\n",
            "name": "allow_test_transactions",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Default payment language (Two letter language code, ISO-639-1)</p>\n",
            "name": "default_payment_language",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Text to be displayed on cardholder’s statement. Max 22 ASCII chars. Currently supported by Clearhaus only.</p>\n",
            "name": "default_text_on_statement",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Default branding config. Can be overwritten in branding or in request to payment window</p>\n",
            "name": "default_branding_config",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Merchant"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "DELETE-account---format-",
        "summary": "Delete merchant account",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/account/private-key": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "GET-account-private-key---format-",
        "summary": "Gets the private key of the merchant",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PrivateKey"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "PATCH-account-private-key---format-",
        "summary": "Regenerates the private key of the merchant",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PrivateKey"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/account/04-platform": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "GET-account-04-platform---format-",
        "summary": "Get 04 platform settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Zero4PlatformSettings"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "DELETE-account-04-platform---format-",
        "summary": "Delete 04 platform settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Zero4PlatformSettings"
            }
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/account/logo": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "GET-account-logo---format-",
        "summary": "Gets the merchant logo as a raw download or a 404 if none exists",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Type of logo</p>\n",
            "name": "logo_type",
            "required": false,
            "type": "string",
            "default": "payment_window",
            "enum": ["payment_window", "mobilepay"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "PUT-account-logo---format-",
        "summary": "Creates or replaces the current merchant logo",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>The logo as a multipart file. If the logo_type is ‘mobilepay’, the logo must be a 250px x 250px PNG file</p>\n",
            "name": "file",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Type of logo</p>\n",
            "name": "logo_type",
            "required": false,
            "type": "string",
            "default": "payment_window",
            "enum": ["payment_window", "mobilepay"]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["account"],
        "operationId": "DELETE-account-logo---format-",
        "summary": "Deletes the current merchant logo",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Type of logo</p>\n",
            "name": "logo_type",
            "required": false,
            "type": "string",
            "default": "payment_window",
            "enum": ["payment_window", "mobilepay"]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/acquirers": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers---format-",
        "summary": "Fetch acquirers",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettings"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/bambora": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-bambora---format-",
        "summary": "Get Bambora acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsBambora"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-bambora---format-",
        "summary": "Update Bambora acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Bambora payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Bambora identification number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Bambora international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Bambora)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Bambora)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Bambora)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Bambora)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsBambora"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/clearhaus": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-clearhaus---format-",
        "summary": "Get Clearhaus acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsClearhaus"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-clearhaus---format-",
        "summary": "Update Clearhaus acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable ClearHaus payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Clearhaus API key (is required but may be left empty)</p>\n",
            "name": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Clearhaus)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable payouts (requires agreement with Clearhaus)</p>\n",
            "name": "payout",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Apple Pay (requires agreement with Clearhaus)</p>\n",
            "name": "apple_pay",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsClearhaus"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/coinify": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-coinify---format-",
        "summary": "Get Coinify acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsCoinify"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-coinify---format-",
        "summary": "Update Coinify acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Coinify Bitcoin payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Coinify API key</p>\n",
            "name": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Coinify API secret</p>\n",
            "name": "api_secret",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Coinify IPN secret (recommended)</p>\n",
            "name": "ipn_secret",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsCoinify"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/elavon": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-elavon---format-",
        "summary": "Get Elavon acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsElavon"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-elavon---format-",
        "summary": "Update Elavon acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Elavon payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Elavon identification number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Elavon international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Elavon)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Elavon)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Elavon)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Elavon)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsElavon"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/handelsbanken": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-handelsbanken---format-",
        "summary": "Get Handelsbanken acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsHandelsbanken"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-handelsbanken---format-",
        "summary": "Update Handelsbanken acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Handelsbanken payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Handelsbanken identification number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Handelsbanken international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Handelsbanken)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Handelsbanken)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Handelsbanken)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Handelsbanken)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsHandelsbanken"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/klarna": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-klarna---format-",
        "summary": "Get Klarna acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarna"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-klarna---format-",
        "summary": "Update Klarna acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Klarna payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Klarna merchant ID</p>\n",
            "name": "eid",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Klarna shared secret</p>\n",
            "name": "shared_secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarna"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/klarnapayments": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-klarnapayments---format-",
        "summary": "Get KlarnaPayments acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarnaPayments"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-klarnapayments---format-",
        "summary": "Update KlarnaPayments acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Klarna payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Klarna username</p>\n",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Klarna password</p>\n",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarnaPayments"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/mobilepay": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-mobilepay---format-",
        "summary": "Get MobilePay acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePay"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-mobilepay---format-",
        "summary": "Update MobilePay acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable MobilePay payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Limit MobilePay delivery address selection to theses countries. (ISO 3166-1 alpha-2 without delimiter ‘DKNOSEFI’) (Valid options are DK,NO,SE,FI)</p>\n",
            "name": "delivery_limited_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePay"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/mobilepayonline": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-mobilepayonline---format-",
        "summary": "Get MobilePayOnline acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePayOnline"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-mobilepayonline---format-",
        "summary": "Update MobilePayOnline acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable MobilePay Online payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Id for the merchant</p>\n",
            "name": "merchant_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Limit MobilePay Online delivery address selection to theses countries. (ISO 3166-1 alpha-2 without delimiter ‘DKNOSEFI’) (Valid options are DK,NO,SE,FI)</p>\n",
            "name": "delivery_limited_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePayOnline"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/mobilepaysubscriptions": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-mobilepaysubscriptions---format-",
        "summary": "Get MobilePaySubscriptions acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePaySubscriptions"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-mobilepaysubscriptions---format-",
        "summary": "Update MobilePaySubscriptions acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable MobilePay Subscriptions payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Identifier MobilePay Subscriptions uses to link requests to callbacks</p>\n",
            "name": "auth_state",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Verifies received code challenge</p>\n",
            "name": "code_verifier",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Unix Timestamp of last time the tokens were refreshed</p>\n",
            "name": "last_token_refresh",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Associate client sessions with ID Tokens to mitigate replay attacks</p>\n",
            "name": "nonce",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>0: agreement inactive, 1: flow initialised, 2: tokens received, 3: flow completed</p>\n",
            "name": "pending_status",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "formData",
            "description": "<p>The provider / sales-place chosen by the merchant</p>\n",
            "name": "provider",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Token to refresh access token for up to 1 year</p>\n",
            "name": "refresh_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePaySubscriptions"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/nets": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-nets---format-",
        "summary": "Get Nets acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsNets"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-nets---format-",
        "summary": "Update Nets acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Nets/Teller payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Nets TOF number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Nets)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Nets)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Forbrugsforeningen payments (requires agreement with Nets and Forbrugsforeningen)</p>\n",
            "name": "fbg1886",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecuredByNets fraud protection.</p>\n",
            "name": "secured_by_nets",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>(Depricated; use Teller acquirer)</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsNets"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/paypal": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-paypal---format-",
        "summary": "Get PayPal acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPayPal"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-paypal---format-",
        "summary": "Update PayPal acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable PayPal payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow credit-card payments. (Only for US/CA/UK merchants)</p>\n",
            "name": "credit_card",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Authentication token</p>\n",
            "name": "token",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Authentication token secret</p>\n",
            "name": "token_secret",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "description": "<p>Authentication scope</p>\n",
            "name": "scope",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPayPal"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/paysafecard": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-paysafecard---format-",
        "summary": "Get Paysafecard acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPaysafecard"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-paysafecard---format-",
        "summary": "Update Paysafecard acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Paysafecard payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Paysafecard username</p>\n",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Paysafecard password</p>\n",
            "name": "password",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "<p>Paysafecard currencies (Paysafecard requires agreement per currency)</p>\n",
            "name": "currencies",
            "required": true,
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPaysafecard"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/resurs": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-resurs---format-",
        "summary": "Get Resurs acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsResurs"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-resurs---format-",
        "summary": "Update Resurs acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Resurs payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Resurs customer ID</p>\n",
            "name": "customer_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Resurs password</p>\n",
            "name": "customer_password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsResurs"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/sofort": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-sofort---format-",
        "summary": "Get Sofort acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSofort"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-sofort---format-",
        "summary": "Update Sofort acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Sofort customer number</p>\n",
            "name": "customer_number",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort Gateway project id</p>\n",
            "name": "project_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort API key</p>\n",
            "name": "api_key",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort Gateway feature</p>\n",
            "name": "gateway",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>Enable Sofort iDeal feature</p>\n",
            "name": "ideal",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal project id</p>\n",
            "name": "ideal_project_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal project password</p>\n",
            "name": "ideal_project_password",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Sofort iDeal notification password</p>\n",
            "name": "ideal_notification_password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSofort"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/swedbank": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-swedbank---format-",
        "summary": "Get Swedbank acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwedbank"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-swedbank---format-",
        "summary": "Update Swedbank acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Swedbank payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Swedbank identification number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Swedbank international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Swedbank)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Swedbank)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Swedbank)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Swedbank)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwedbank"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/swish": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-swish---format-",
        "summary": "Get Swish acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwish"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-swish---format-",
        "summary": "Update Swish acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Swish payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Swish merchant id</p>\n",
            "name": "merchant_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Swish certificate and private-key from Cryptography store</p>\n",
            "name": "cryptography_key_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwish"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/teller": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-teller---format-",
        "summary": "Get Teller acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTeller"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-teller---format-",
        "summary": "Update Teller acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Teller payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Teller TOF number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Teller)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Teller)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Teller)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Teller)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection. (disabling requires agreement with Teller)</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Teller Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTeller"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/trustly": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-trustly---format-",
        "summary": "Get Trustly acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTrustly"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-trustly---format-",
        "summary": "Update Trustly acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Trustly payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable iDeal payments</p>\n",
            "name": "ideal",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Trustly API username</p>\n",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Trustly API password</p>\n",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTrustly"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/valitor": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-valitor---format-",
        "summary": "Get Valitor acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsValitor"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-valitor---format-",
        "summary": "Update Valitor acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Valitor payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Valitor identification number</p>\n",
            "name": "identification_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Valitor international identification number</p>\n",
            "name": "identification_code_int",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Business code (assigned by Valitor)</p>\n",
            "name": "business_code",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable recurring payments (requires agreement with Valitor)</p>\n",
            "name": "recurring",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable AMEX payments (requires agreement with Valitor)</p>\n",
            "name": "americanexpress",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable Diners Club payments (requires agreement with Valitor)</p>\n",
            "name": "dinersclub",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Enable SecurePay fraud protection.</p>\n",
            "name": "securepay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>VISA MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "visa_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard MPI merchant id. Used for 3D secure transactions</p>\n",
            "name": "mastercard_mpi_merchant_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VISA acquirer bin used for 3D Secure</p>\n",
            "name": "visa_bin",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mastercard acquirer bin used for 3D Secure</p>\n",
            "name": "mastercard_bin",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsValitor"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/viabill": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-viabill---format-",
        "summary": "Get ViaBill acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsViaBill"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-viabill---format-",
        "summary": "Update ViaBill acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable ViaBill payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>ViaBill API key</p>\n",
            "name": "api_key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsViaBill"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/vipps": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "GET-acquirers-vipps---format-",
        "summary": "Get Vipps acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsVipps"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "PATCH-acquirers-vipps---format-",
        "summary": "Update Vipps acquirer settings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Enable Vipps payments</p>\n",
            "name": "active",
            "required": true,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Vipps OAuth Client ID</p>\n",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Vipps OAuth Client Secret</p>\n",
            "name": "client_secret",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Vipps agreement serial</p>\n",
            "name": "serial_number",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Vipps Access-Token Subscription Key</p>\n",
            "name": "access_token_subscription_key",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Vipps eCommerce Subscription Key</p>\n",
            "name": "ecommerce_subscription_key",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Vipps companys organization number</p>\n",
            "name": "orgno",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsVipps"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/acquirers/{acquirer}/test": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acquirers"],
        "operationId": "POST-acquirers--acquirer-test---format-",
        "summary": "Test payments via acquirer",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Acquirer name</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "elavon",
              "handelsbanken",
              "nets",
              "paypal",
              "swedbank",
              "teller",
              "valitor"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerTest"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "GET-cards---format-",
        "summary": "Get saved cards",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Timestamp field</p>\n",
            "name": "timestamp",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at", "updated_at"]
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "min_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "max_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Filter by suspected fraud</p>\n",
            "name": "fraud_suspected",
            "required": false,
            "type": "boolean",
            "enum": [true]
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "POST-cards---format-",
        "summary": "Create saved card",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object",
            "default": {}
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "GET-cards--id---format-",
        "summary": "Get saved card",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "PATCH-cards--id---format-",
        "summary": "Update saved card",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/cards/{id}/authorize": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "POST-cards--id-authorize---format-",
        "summary": "Authorize saved card",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Card number</p>\n",
            "name": "card[number]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Expiration date (YYMM)</p>\n",
            "name": "card[expiration]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>CVD/CVV</p>\n",
            "name": "card[cvd]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Card holder name</p>\n",
            "name": "card[issued_to]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Brand to use on multi-brand card</p>\n",
            "name": "card[brand]",
            "required": false,
            "type": "string",
            "enum": [
              "american-express",
              "dankort",
              "diners",
              "fbg1886",
              "jcb",
              "maestro",
              "mastercard",
              "mastercard-debet",
              "visa",
              "visa-electron"
            ]
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards/{id}/cancel": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "POST-cards--id-cancel---format-",
        "summary": "Cancel saved card",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Card"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards/{id}/tokens": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "POST-cards--id-tokens---format-",
        "summary": "Create card token",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10CardToken"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards/{id}/link": {
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "PUT-cards--id-link---format-",
        "summary": "Create or update a card link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Agreement to use. Defaults to the Payment Window agreement</p>\n",
            "name": "agreement_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Language</p>\n",
            "name": "language",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after authorize</p>\n",
            "name": "continueurl",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after cancelation</p>\n",
            "name": "cancelurl",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Endpoint for async callback</p>\n",
            "name": "callbackurl",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Limit payment methods</p>\n",
            "name": "payment_methods",
            "required": false,
            "type": "string",
            "default": "creditcard"
          },
          {
            "in": "formData",
            "description": "<p>Override branding. Default is merchant default branding</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_tracking_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_client_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Force usage of the given acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Allow opening in iframe</p>\n",
            "name": "framed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Config for branding. Will be merged with the default config in the branding</p>\n",
            "name": "branding_config",
            "required": false,
            "type": "object"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10CardLinkUrl"
            }
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "DELETE-cards--id-link---format-",
        "summary": "Delete card link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/cards/{id}/fraud-report": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "POST-cards--id-fraud-report---format-",
        "summary": "Create fraud confirmation report",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudReport"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cards/{id}/operations/{operation_id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cards"],
        "operationId": "GET-cards--id-operations--operation_id---format-",
        "summary": "Get Operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10CardOperation"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/agreements": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "GET-agreements---format-",
        "summary": "Get agreements",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Return only or filter out support agreements</p>\n",
            "name": "support",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Filter by system agreement service name</p>\n",
            "name": "service",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>If set, only show the agreement of the caller</p>\n",
            "name": "me",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>If set, shows agreements for another account if current account has access.</p>\n",
            "name": "account_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "POST-agreements---format-",
        "summary": "Create agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email of the user to invite to this account. Only one of user_email and system_user can be specified.</p>\n",
            "name": "user_email",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Create a new system user with this name. Only one of user_email and system_user can be specified.</p>\n",
            "name": "system_user",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Is account owner. Default is false</p>\n",
            "name": "owner",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Description of the account</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Resource uri</p>\n",
            "name": "acl_permissions[][resource]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Allow GET</p>\n",
            "name": "acl_permissions[][get]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow POST</p>\n",
            "name": "acl_permissions[][post]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow PUT</p>\n",
            "name": "acl_permissions[][put]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow DELETE</p>\n",
            "name": "acl_permissions[][delete]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow PATCH</p>\n",
            "name": "acl_permissions[][patch]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>IP address</p>\n",
            "name": "ip_restriction[][address]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/agreements/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "GET-agreements--id---format-",
        "summary": "Get agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "PATCH-agreements--id---format-",
        "summary": "Update agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Is account owner</p>\n",
            "name": "owner",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Description of the account</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>IP address</p>\n",
            "name": "ip_restriction[][address]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "PUT-agreements--id---format-",
        "summary": "Replace agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Is account owner</p>\n",
            "name": "owner",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Description of the account</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Resource uri</p>\n",
            "name": "acl_permissions[][resource]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Allow GET</p>\n",
            "name": "acl_permissions[][get]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow POST</p>\n",
            "name": "acl_permissions[][post]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow PUT</p>\n",
            "name": "acl_permissions[][put]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow DELETE</p>\n",
            "name": "acl_permissions[][delete]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Allow PATCH</p>\n",
            "name": "acl_permissions[][patch]",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>IP address</p>\n",
            "name": "ip_restriction[][address]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "DELETE-agreements--id---format-",
        "summary": "Delete agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/agreements/{id}/activity": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "GET-agreements--id-activity---format-",
        "summary": "Get agreement activity",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Activity"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/agreements/{id}/api-key": {
      "patch": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["agreements"],
        "operationId": "PATCH-agreements--id-api-key---format-",
        "summary": "Regenerate the API key for this agreement",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Agreement id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Agreement"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/acl-resources": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["acl-resources"],
        "operationId": "GET-acl-resources---format-",
        "summary": "Get acl resources",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AclResource"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/activity": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["activity"],
        "operationId": "GET-activity---format-",
        "summary": "Get activity",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Limit to activity by user_id</p>\n",
            "name": "user_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by target type, e.g. ‘Payment’</p>\n",
            "name": "target_type",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Filter by target id, e.g. id of payment</p>\n",
            "name": "target_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by whether a support user made the activity</p>\n",
            "name": "support",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "Time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Activity"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/activity/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["activity"],
        "operationId": "GET-activity--id---format-",
        "summary": "Get a single activity entry",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Activity entry id</p>\n",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Activity"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/brandings": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "GET-brandings---format-",
        "summary": "Get brandings",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Specifies which attributes to skip. Default is ‘resources.data’</p>\n",
            "name": "except",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Specifies which attributes to include. (Overrides except default)</p>\n",
            "name": "only",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "name",
            "enum": ["name", "id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Branding"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "POST-brandings---format-",
        "summary": "Create a branding",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive name of the branding</p>\n",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Branding"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/brandings/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "GET-brandings--id---format-",
        "summary": "Get a branding",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Specifies which attributes to skip. Default is ‘resources.data’</p>\n",
            "name": "except",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Specifies which attributes to include. (Overrides except default)</p>\n",
            "name": "only",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Branding"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "PATCH-brandings--id---format-",
        "summary": "Update a branding",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive name of the branding</p>\n",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Specifies which attributes to skip. Default is ‘resources.data’</p>\n",
            "name": "except",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Specifies which attributes to include. (Overrides except default)</p>\n",
            "name": "only",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Branding"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "DELETE-brandings--id---format-",
        "summary": "Delete a branding",
        "description": "\n",
        "parameters": [
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/brandings/{id}/copy": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "POST-brandings--id-copy---format-",
        "summary": "Copies branding and returns the new branding",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Specifies which attributes to skip. Default is ‘resources.data’</p>\n",
            "name": "except",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Specifies which attributes to include. (Overrides except default)</p>\n",
            "name": "only",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Branding"
            }
          },
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/brandings/{id}/*resource_name": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "GET-brandings--id-*resource_name---format-",
        "summary": "Gets a branding resource as a file",
        "description": "\n",
        "parameters": [
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "\n",
            "name": "resource_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "PUT-brandings--id-*resource_name---format-",
        "summary": "Uploads a file and creates or replaces a resource",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>The file send as multipart</p>\n",
            "name": "file",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "resource_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["brandings"],
        "operationId": "DELETE-brandings--id-*resource_name---format-",
        "summary": "Deletes a branding resource",
        "description": "\n",
        "parameters": [
          {
            "in": "path",
            "description": "<p>Branding id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "\n",
            "name": "resource_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/changelog": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["changelog"],
        "operationId": "GET-changelog---format-",
        "summary": "Get the QuickPay API Changelog",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/operational-status/acquirers": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["operational-status"],
        "operationId": "GET-operational-status-acquirers---format-",
        "summary": "Gets operational status of all acquirers",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "acquirer",
            "enum": ["acquirer", "status"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10AcquirerStatus"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["ping"],
        "operationId": "GET-ping---format-",
        "summary": "Use this to test connectivity to the API",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Pong"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["ping"],
        "operationId": "POST-ping---format-",
        "summary": "Use this to test connectivity to the API",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Pong"
            }
          },
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/cryptography/keys": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "GET-cryptography-keys---format-",
        "summary": "Get keys",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "\n",
            "name": "type",
            "required": false,
            "type": "string",
            "enum": ["ec", "rsa"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10MerchantCryptographyKey"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "POST-cryptography-keys---format-",
        "summary": "Create key",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "type",
            "required": true,
            "type": "string",
            "enum": ["ec", "rsa"]
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "short_description",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "key_size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "curve",
            "required": true,
            "type": "string",
            "enum": [
              "secp112r1",
              "secp112r2",
              "secp128r1",
              "secp128r2",
              "secp160k1",
              "secp160r1",
              "secp160r2",
              "secp192k1",
              "secp224k1",
              "secp224r1",
              "secp256k1",
              "secp384r1",
              "secp521r1",
              "prime192v1",
              "prime192v2",
              "prime192v3",
              "prime239v1",
              "prime239v2",
              "prime239v3",
              "prime256v1",
              "sect113r1",
              "sect113r2",
              "sect131r1",
              "sect131r2",
              "sect163k1",
              "sect163r1",
              "sect163r2",
              "sect193r1",
              "sect193r2",
              "sect233k1",
              "sect233r1",
              "sect239k1",
              "sect283k1",
              "sect283r1",
              "sect409k1",
              "sect409r1",
              "sect571k1",
              "sect571r1",
              "c2pnb163v1",
              "c2pnb163v2",
              "c2pnb163v3",
              "c2pnb176v1",
              "c2tnb191v1",
              "c2tnb191v2",
              "c2tnb191v3",
              "c2pnb208w1",
              "c2tnb239v1",
              "c2tnb239v2",
              "c2tnb239v3",
              "c2pnb272w1",
              "c2pnb304w1",
              "c2tnb359v1",
              "c2pnb368w1",
              "c2tnb431r1",
              "wap-wsg-idm-ecid-wtls1",
              "wap-wsg-idm-ecid-wtls3",
              "wap-wsg-idm-ecid-wtls4",
              "wap-wsg-idm-ecid-wtls5",
              "wap-wsg-idm-ecid-wtls6",
              "wap-wsg-idm-ecid-wtls7",
              "wap-wsg-idm-ecid-wtls8",
              "wap-wsg-idm-ecid-wtls9",
              "wap-wsg-idm-ecid-wtls10",
              "wap-wsg-idm-ecid-wtls11",
              "wap-wsg-idm-ecid-wtls12",
              "Oakley-EC2N-3",
              "Oakley-EC2N-4",
              "brainpoolP160r1",
              "brainpoolP160t1",
              "brainpoolP192r1",
              "brainpoolP192t1",
              "brainpoolP224r1",
              "brainpoolP224t1",
              "brainpoolP256r1",
              "brainpoolP256t1",
              "brainpoolP320r1",
              "brainpoolP320t1",
              "brainpoolP384r1",
              "brainpoolP384t1",
              "brainpoolP512r1",
              "brainpoolP512t1",
              "SM2"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10MerchantCryptographyKey"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cryptography/keys/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "GET-cryptography-keys--id---format-",
        "summary": "Get key",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10MerchantCryptographyKey"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "PATCH-cryptography-keys--id---format-",
        "summary": "update key",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "short_description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10MerchantCryptographyKey"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "DELETE-cryptography-keys--id---format-",
        "summary": "Delete key",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/cryptography/keys/{id}/csr": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "POST-cryptography-keys--id-csr---format-",
        "summary": "Create certificate request (CSR)",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "subject[][key]",
            "required": true,
            "type": "string",
            "enum": [
              "C",
              "CN",
              "emailAddress",
              "L",
              "OU",
              "postalCode",
              "ST",
              "street"
            ]
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "subject[][value]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "subject[][encoding]",
            "required": true,
            "type": "string",
            "enum": ["printable", "utf8"]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/cryptography/keys/{id}/certificate": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "GET-cryptography-keys--id-certificate---format-",
        "summary": "Get certificate",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "PUT-cryptography-keys--id-certificate---format-",
        "summary": "Replace certificate",
        "description": "\n",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "description": "<p>The file send as multipart</p>\n",
            "name": "file",
            "required": true,
            "schema": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["cryptography"],
        "operationId": "DELETE-cryptography-keys--id-certificate---format-",
        "summary": "Delete certificate",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/fees": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "POST-fees---format-",
        "summary": "Calculate fee for auth params. Requires one of card[number] or card[token]",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Amount specified in smallest unit</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Currency</p>\n",
            "name": "currency",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Apple Pay payment-token</p>\n",
            "name": "card[apple_pay_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>MobilePay Online payment-token</p>\n",
            "name": "card[mobilepay_online_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Card token</p>\n",
            "name": "card[token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Card number</p>\n",
            "name": "card[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Brand to use on multi-brand card</p>\n",
            "name": "card[brand]",
            "required": false,
            "type": "string",
            "enum": [
              "american-express",
              "dankort",
              "diners",
              "fbg1886",
              "jcb",
              "maestro",
              "mastercard",
              "mastercard-debet",
              "visa",
              "visa-electron"
            ]
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10CalculatedFee"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/fees/{acquirer}/{payment_method}": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "POST-fees--acquirer--payment_method---format-",
        "summary": "Calculate fee",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Name of acquirer</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "handelsbanken",
              "elavon",
              "klarna",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps",
              "resurs",
              "klarnapayments"
            ]
          },
          {
            "in": "path",
            "description": "<p>Payment method</p>\n",
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Amount specified in smallest unit</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10CalculatedFee"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/fees/formulas": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "GET-fees-formulas---format-",
        "summary": "Get all fee formulas",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FeeFormula"
            }
          }
        }
      }
    },
    "/fees/formulas/{acquirer}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "GET-fees-formulas--acquirer---format-",
        "summary": "Get fee formulas",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Name of acquirer</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "handelsbanken",
              "elavon",
              "klarna",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps",
              "resurs",
              "klarnapayments"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FeeFormula"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/fees/formulas/{acquirer}/{payment_method}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "GET-fees-formulas--acquirer--payment_method---format-",
        "summary": "Get fee formula",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Name of acquirer</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "handelsbanken",
              "elavon",
              "klarna",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps",
              "resurs",
              "klarnapayments"
            ]
          },
          {
            "in": "path",
            "description": "<p>Payment method</p>\n",
            "name": "payment_method",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FeeFormula"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "PATCH-fees-formulas--acquirer--payment_method---format-",
        "summary": "Update a fee formula",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Name of acquirer</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "handelsbanken",
              "elavon",
              "klarna",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps",
              "resurs",
              "klarnapayments"
            ]
          },
          {
            "in": "path",
            "description": "<p>Payment method</p>\n",
            "name": "payment_method",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>The formula</p>\n",
            "name": "formula",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FeeFormula"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fees"],
        "operationId": "DELETE-fees-formulas--acquirer--payment_method---format-",
        "summary": "Reset a formula to default",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Name of acquirer</p>\n",
            "name": "acquirer",
            "required": true,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "handelsbanken",
              "elavon",
              "klarna",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps",
              "resurs",
              "klarnapayments"
            ]
          },
          {
            "in": "path",
            "description": "<p>Payment method</p>\n",
            "name": "payment_method",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/fraud-rulesets": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fraud-rulesets"],
        "operationId": "GET-fraud-rulesets---format-",
        "summary": "Get custom defined fraud rulesets",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudRuleset"
            }
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fraud-rulesets"],
        "operationId": "POST-fraud-rulesets---format-",
        "summary": "Create a custom fraud ruleset",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive name</p>\n",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name af variable metric</p>\n",
            "name": "filter_rules[][metric_name]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Operator</p>\n",
            "name": "filter_rules[][operator]",
            "required": true,
            "type": "string",
            "enum": ["==", "!=", "<", "<=", ">", ">=", "in", "not_in"]
          },
          {
            "in": "formData",
            "description": "<p>String representation of the value to compare to the metric, e.g. ‘DNK’, ‘42’ or ‘DNK, DEU’</p>\n",
            "name": "filter_rules[][value]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Action to take when ruleset triggers</p>\n",
            "name": "action",
            "required": true,
            "type": "string",
            "enum": ["nothing", "flag", "force_3d", "block"]
          },
          {
            "in": "formData",
            "description": "<p>Method to combine filter rules</p>\n",
            "name": "combinator",
            "required": true,
            "type": "string",
            "enum": ["and", "or"]
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudRuleset"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/fraud-rulesets/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fraud-rulesets"],
        "operationId": "GET-fraud-rulesets--id---format-",
        "summary": "Get ruleset by id",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Ruleset id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudRuleset"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fraud-rulesets"],
        "operationId": "PATCH-fraud-rulesets--id---format-",
        "summary": "Update a ruleset",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Ruleset id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive name</p>\n",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name af variable metric</p>\n",
            "name": "filter_rules[][metric_name]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Operator</p>\n",
            "name": "filter_rules[][operator]",
            "required": true,
            "type": "string",
            "enum": ["==", "!=", "<", "<=", ">", ">=", "in", "not_in"]
          },
          {
            "in": "formData",
            "description": "<p>String representation of the value to compare to the metric</p>\n",
            "name": "filter_rules[][value]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Action to take when ruleset triggers</p>\n",
            "name": "action",
            "required": false,
            "type": "string",
            "enum": ["nothing", "flag", "force_3d", "block"]
          },
          {
            "in": "formData",
            "description": "<p>Method to combine filter rules</p>\n",
            "name": "combinator",
            "required": false,
            "type": "string",
            "enum": ["and", "or"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudRuleset"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["fraud-rulesets"],
        "operationId": "DELETE-fraud-rulesets--id---format-",
        "summary": "Delete ruleset",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Ruleset id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudRuleset"
            }
          },
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/payment-method-priority": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payment-method-priority"],
        "operationId": "GET-payment-method-priority---format-",
        "summary": "Get merchant payment method priority",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PaymentMethodPriority"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payment-method-priority"],
        "operationId": "POST-payment-method-priority---format-",
        "summary": "Replaces the payment method priority of the merchant",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>A map of payment method to acquirers, e.g. { “visa”: [“clearhaus”, “nets”], … }</p>\n",
            "name": "payment_method_priority",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "GET-payments---format-",
        "summary": "Get all payments",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Year</p>\n",
            "name": "date[year]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Month</p>\n",
            "name": "date[month]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 12
          },
          {
            "in": "query",
            "description": "<p>Day of the month</p>\n",
            "name": "date[day]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 31
          },
          {
            "in": "query",
            "description": "<p>Hour of the day</p>\n",
            "name": "date[hour]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 23
          },
          {
            "in": "query",
            "description": "<p>Minute of the hour</p>\n",
            "name": "date[minute]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 59
          },
          {
            "in": "query",
            "description": "<p>Timestamp field</p>\n",
            "name": "timestamp",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at", "updated_at"]
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "min_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "max_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Return accepted payments</p>\n",
            "name": "accepted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Find by order_id</p>\n",
            "name": "order_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Find by state</p>\n",
            "name": "state",
            "required": false,
            "type": "string",
            "enum": ["initial", "pending", "new", "rejected", "processed"]
          },
          {
            "in": "query",
            "description": "<p>Find by transaction id</p>\n",
            "name": "id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "query",
            "description": "<p>Filter by suspected fraud</p>\n",
            "name": "fraud_suspected",
            "required": false,
            "type": "boolean",
            "enum": [true]
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id", "order_id", "created_at"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "Time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/QuickPayProtocolV10Payment" }
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes":["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments---format-",
        "summary": "Create payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Currency</p>\n",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Unique order id(must be between 4-20 characters)</p>\n",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "invoice_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "invoice_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "invoice_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "invoice_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "invoice_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "invoice_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "invoice_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "invoice_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "invoice_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "invoice_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "invoice_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "invoice_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "invoice_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "invoice_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "shipping_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "shipping_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "shipping_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "shipping_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "shipping_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "shipping_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "shipping_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "shipping_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "shipping_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "shipping_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "shipping_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "shipping_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "shipping_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "shipping_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Used branding id</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Quantity</p>\n",
            "name": "basket[][qty]",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Item reference number</p>\n",
            "name": "basket[][item_no]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Item name</p>\n",
            "name": "basket[][item_name]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Per item price (incl. VAT)</p>\n",
            "name": "basket[][item_price]",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>VAT rate</p>\n",
            "name": "basket[][vat_rate]",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Shipping method</p>\n",
            "name": "shipping[method]",
            "required": false,
            "type": "string",
            "enum": [
              "store_pick_up",
              "home_delivery",
              "registered_box",
              "unregistered_box",
              "pick_up_point",
              "own_delivery"
            ]
          },
          {
            "in": "formData",
            "description": "<p>Shipping company</p>\n",
            "name": "shipping[company]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shipping price (incl. VAT)</p>\n",
            "name": "shipping[amount]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>VAT rate</p>\n",
            "name": "shipping[vat_rate]",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Shipping tracking number</p>\n",
            "name": "shipping[tracking_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shipping tracking url</p>\n",
            "name": "shipping[tracking_url]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop system module name</p>\n",
            "name": "shopsystem[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop system module version</p>\n",
            "name": "shopsystem[version]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object",
            "default": {}
          },
          {
            "in": "formData",
            "description": "<p>Text to be displayed on cardholder’s statement. Max 22 ASCII chars. Currently supported by Clearhaus only.</p>\n",
            "name": "text_on_statement",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/link": {
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "PUT-payments--id-link---format-",
        "summary": "Create or update a payment link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Transaction id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Amount to authorize</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Agreement to use. Defaults to the Payment Window agreement</p>\n",
            "name": "agreement_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Language</p>\n",
            "name": "language",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after authorize</p>\n",
            "name": "continue_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after cancelation</p>\n",
            "name": "cancel_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Endpoint for async callback</p>\n",
            "name": "callback_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Limit payment methods</p>\n",
            "name": "payment_methods",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Add acquirer fee to amount. Default is merchant autofee</p>\n",
            "name": "auto_fee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Override branding. Default is merchant default branding</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_tracking_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_client_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Force usage of the given acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Set a deadline in seconds for the cardholder to complete</p>\n",
            "name": "deadline",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Allow opening in iframe</p>\n",
            "name": "framed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Config for branding. Will be merged with the default config in the branding</p>\n",
            "name": "branding_config",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Required for PayPal. Email of customer.</p>\n",
            "name": "customer_email",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Get customer invoice address via acquirer (Currently MobilePay and PayPal only)</p>\n",
            "name": "invoice_address_selection",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Get customer shipping address via acquirer (Currently MobilePay and PayPal only)</p>\n",
            "name": "shipping_address_selection",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>When true, payment is captured after authorization. Default is false</p>\n",
            "name": "auto_capture",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PaymentLinkUrl"
            }
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "DELETE-payments--id-link---format-",
        "summary": "Delete payment link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Transaction id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "GET-payments--id---format-",
        "summary": "Get payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "PATCH-payments--id---format-",
        "summary": "Update payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Payment must be authorized before this time</p>\n",
            "name": "deadline_at",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "invoice_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "invoice_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "invoice_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "invoice_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "invoice_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "invoice_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "invoice_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "invoice_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "invoice_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "invoice_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "invoice_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "invoice_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "invoice_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "invoice_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "shipping_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "shipping_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "shipping_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "shipping_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "shipping_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "shipping_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "shipping_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "shipping_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "shipping_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "shipping_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "shipping_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "shipping_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "shipping_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "shipping_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Quantity</p>\n",
            "name": "basket[][qty]",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Item reference number</p>\n",
            "name": "basket[][item_no]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Item name</p>\n",
            "name": "basket[][item_name]",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Per item price (incl. VAT)</p>\n",
            "name": "basket[][item_price]",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>VAT rate</p>\n",
            "name": "basket[][vat_rate]",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Shipping method</p>\n",
            "name": "shipping[method]",
            "required": false,
            "type": "string",
            "enum": [
              "store_pick_up",
              "home_delivery",
              "registered_box",
              "unregistered_box",
              "pick_up_point",
              "own_delivery"
            ]
          },
          {
            "in": "formData",
            "description": "<p>Shipping company</p>\n",
            "name": "shipping[company]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shipping price (incl. VAT)</p>\n",
            "name": "shipping[amount]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>VAT rate</p>\n",
            "name": "shipping[vat_rate]",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Shipping tracking number</p>\n",
            "name": "shipping[tracking_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shipping tracking url</p>\n",
            "name": "shipping[tracking_url]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/payments/{id}/session": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-session---format-",
        "summary": "Create payment session",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>When true, payment is captured after authorization. Default is false</p>\n",
            "name": "auto_capture",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>When true, fee is calculated and added to the given amount. Default is merchant autofee</p>\n",
            "name": "autofee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person first name</p>\n",
            "name": "person[first_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person last name</p>\n",
            "name": "person[last_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person email</p>\n",
            "name": "person[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/authorize": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-authorize---format-",
        "summary": "Authorize payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Vate rate</p>\n",
            "name": "vat_rate",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Card number</p>\n",
            "name": "card[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Expiration date (YYMM)</p>\n",
            "name": "card[expiration]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>CVD/CVV</p>\n",
            "name": "card[cvd]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Card token</p>\n",
            "name": "card[token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Apple Pay payment-token</p>\n",
            "name": "card[apple_pay_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>MobilePay Online payment-token</p>\n",
            "name": "card[mobilepay_online_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Card holder name</p>\n",
            "name": "card[issued_to]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Brand to use on multi-brand card</p>\n",
            "name": "card[brand]",
            "required": false,
            "type": "string",
            "enum": [
              "american-express",
              "dankort",
              "diners",
              "fbg1886",
              "jcb",
              "maestro",
              "mastercard",
              "mastercard-debet",
              "visa",
              "visa-electron"
            ]
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure status</p>\n",
            "name": "card[status]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure eci</p>\n",
            "name": "card[eci]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure xav</p>\n",
            "name": "card[xav]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure cavv</p>\n",
            "name": "card[cavv]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "mobile_number",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer NIN Number</p>\n",
            "name": "nin[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer country (ISO 3166-1 Alpha-3)</p>\n",
            "name": "nin[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer gender</p>\n",
            "name": "nin[gender]",
            "required": false,
            "type": "string",
            "enum": ["male", "female"]
          },
          {
            "in": "formData",
            "description": "<p>Person first name</p>\n",
            "name": "person[first_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person last name</p>\n",
            "name": "person[last_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person email</p>\n",
            "name": "person[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>When true, payment is captured after authorization. Default is false</p>\n",
            "name": "auto_capture",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>When true, fee is calculated and added to the given amount. Default is merchant autofee</p>\n",
            "name": "autofee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>(Nets only) When true, will perform an initial authorize of zero, then authorize the full amount on capture. Default is false</p>\n",
            "name": "zero_auth",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/capture": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-capture---format-",
        "summary": "Capture payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/refund": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-refund---format-",
        "summary": "Refund payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Vate rate</p>\n",
            "name": "vat_rate",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/cancel": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-cancel---format-",
        "summary": "Cancel payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/renew": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-renew---format-",
        "summary": "Renew authorization",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/fraud-report": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "POST-payments--id-fraud-report---format-",
        "summary": "Create fraud confirmation report",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudReport"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payments/{id}/operations/{operation_id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "GET-payments--id-operations--operation_id---format-",
        "summary": "Get Operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Operation"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payments"],
        "operationId": "PATCH-payments--id-operations--operation_id---format-",
        "summary": "Update operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payment id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Aborts the operation. Only possible on capture, refund, recurring and cancel operations (false is the only allowed value)</p>\n",
            "name": "pending",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Operation"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "428": {
            "description": "Precondition required"
          }
        }
      }
    },
    "/payouts": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "GET-payouts---format-",
        "summary": "Get payouts",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Year</p>\n",
            "name": "date[year]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Month</p>\n",
            "name": "date[month]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 12
          },
          {
            "in": "query",
            "description": "<p>Day of the month</p>\n",
            "name": "date[day]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 31
          },
          {
            "in": "query",
            "description": "<p>Hour of the day</p>\n",
            "name": "date[hour]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 23
          },
          {
            "in": "query",
            "description": "<p>Minute of the hour</p>\n",
            "name": "date[minute]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 59
          },
          {
            "in": "query",
            "description": "<p>Timestamp field</p>\n",
            "name": "timestamp",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at", "updated_at"]
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "min_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "max_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Return accepted payouts</p>\n",
            "name": "accepted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Find by order_id</p>\n",
            "name": "order_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Find by state</p>\n",
            "name": "state",
            "required": false,
            "type": "string",
            "enum": ["initial", "pending", "rejected", "processed"]
          },
          {
            "in": "query",
            "description": "<p>Find by payout id</p>\n",
            "name": "id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id", "order_id", "created_at"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payout"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "POST-payouts---format-",
        "summary": "Create payout",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Currency</p>\n",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Unique order id(must be between 4-20 characters)</p>\n",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object",
            "default": {}
          },
          {
            "in": "formData",
            "description": "<p>Text to be displayed on cardholder’s statement. Max 22 ASCII chars. Currently supported by Clearhaus only.</p>\n",
            "name": "text_on_statement",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payout"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/payouts/{id}/link": {
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "PUT-payouts--id-link---format-",
        "summary": "Create or update a payout link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Amount to credit</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Agreement to use. Defaults to the Payment Window agreement</p>\n",
            "name": "agreement_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Language</p>\n",
            "name": "language",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after credit</p>\n",
            "name": "continue_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after cancelation</p>\n",
            "name": "cancel_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Endpoint for async callback</p>\n",
            "name": "callback_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Limit payment methods</p>\n",
            "name": "payment_methods",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Override branding. Default is merchant default branding</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_tracking_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_client_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Force usage of the given acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Allow opening in iframe</p>\n",
            "name": "framed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Config for branding. Will be merged with the default config in the branding</p>\n",
            "name": "branding_config",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PaymentLinkUrl"
            }
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "DELETE-payouts--id-link---format-",
        "summary": "Delete payout link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/payouts/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "GET-payouts--id---format-",
        "summary": "Get payout",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payout"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "PATCH-payouts--id---format-",
        "summary": "Update payout",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payout"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/payouts/{id}/credit": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "POST-payouts--id-credit---format-",
        "summary": "Authorize a payout",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Vate rate</p>\n",
            "name": "vat_rate",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Card number</p>\n",
            "name": "card[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Expiration date (YYMM)</p>\n",
            "name": "card[expiration]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>CVD/CVV</p>\n",
            "name": "card[cvd]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Card token</p>\n",
            "name": "card[token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Apple Pay payment-token</p>\n",
            "name": "card[apple_pay_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>MobilePay Online payment-token</p>\n",
            "name": "card[mobilepay_online_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Card holder name</p>\n",
            "name": "card[issued_to]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Brand to use on multi-brand card</p>\n",
            "name": "card[brand]",
            "required": false,
            "type": "string",
            "enum": [
              "american-express",
              "dankort",
              "diners",
              "fbg1886",
              "jcb",
              "maestro",
              "mastercard",
              "mastercard-debet",
              "visa",
              "visa-electron"
            ]
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure status</p>\n",
            "name": "card[status]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure eci</p>\n",
            "name": "card[eci]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure xav</p>\n",
            "name": "card[xav]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure cavv</p>\n",
            "name": "card[cavv]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "mobile_number",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer NIN Number</p>\n",
            "name": "nin[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer country (ISO 3166-1 Alpha-3)</p>\n",
            "name": "nin[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer gender</p>\n",
            "name": "nin[gender]",
            "required": false,
            "type": "string",
            "enum": ["male", "female"]
          },
          {
            "in": "formData",
            "description": "<p>Person first name</p>\n",
            "name": "person[first_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person last name</p>\n",
            "name": "person[last_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person email</p>\n",
            "name": "person[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payout"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/payouts/{id}/operations/{operation_id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["payouts"],
        "operationId": "GET-payouts--id-operations--operation_id---format-",
        "summary": "Get Operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Payout id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Operation"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscription-groups": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "GET-subscription-groups---format-",
        "summary": "Get all subscription groups",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroup"
            }
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "POST-subscription-groups---format-",
        "summary": "Create subscription group",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name of the group</p>\n",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Amount to capture on each recurring capture</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Currency for the amount</p>\n",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive text</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/subscription-groups/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "GET-subscription-groups--id---format-",
        "summary": "Find subscription group by id",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription-group id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroup"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "PATCH-subscription-groups--id---format-",
        "summary": "Update subscription group",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription-group id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Name of the group</p>\n",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Amount to capture on each recurring capture</p>\n",
            "name": "amount",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Descriptive text</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroup"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "DELETE-subscription-groups--id---format-",
        "summary": "Delete subscription group",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription-group id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroup"
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscription-groups/{id}/capture": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscription-groups"],
        "operationId": "POST-subscription-groups--id-capture---format-",
        "summary": "Create recurring payments on subscription group",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription-group id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Unique prefix for the order id of the recurring payments</p>\n",
            "name": "order_id_prefix",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10SubscriptionGroupResult"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "GET-subscriptions---format-",
        "summary": "Get subscriptions",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Year</p>\n",
            "name": "date[year]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Month</p>\n",
            "name": "date[month]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 12
          },
          {
            "in": "query",
            "description": "<p>Day of the month</p>\n",
            "name": "date[day]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 31
          },
          {
            "in": "query",
            "description": "<p>Hour of the day</p>\n",
            "name": "date[hour]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 23
          },
          {
            "in": "query",
            "description": "<p>Minute of the hour</p>\n",
            "name": "date[minute]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 59
          },
          {
            "in": "query",
            "description": "<p>Timestamp field</p>\n",
            "name": "timestamp",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": ["created_at", "updated_at"]
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "min_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Filter payments after the given time. Supported format: “%Y-%m-%d %H:%M:%S %z”</p>\n",
            "name": "max_time",
            "required": false,
            "type": "Time"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Return accepted subscriptions</p>\n",
            "name": "accepted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Find by order_id</p>\n",
            "name": "order_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "<p>Filter by state</p>\n",
            "name": "state",
            "required": false,
            "type": "string",
            "enum": ["initial", "pending", "active", "cancelled", "rejected"]
          },
          {
            "in": "query",
            "description": "<p>Find by subscription id</p>\n",
            "name": "id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "query",
            "description": "<p>Filter by subscription group</p>\n",
            "name": "group_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Filter by suspected fraud</p>\n",
            "name": "fraud_suspected",
            "required": false,
            "type": "boolean",
            "enum": [true]
          },
          {
            "in": "query",
            "description": "<p>Filter by expiration</p>\n",
            "name": "expired",
            "required": false,
            "type": "boolean",
            "enum": [true]
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "id",
            "enum": ["id", "order_id", "created_at"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          },
          {
            "in": "query",
            "description": "\n",
            "name": "page_key",
            "required": false,
            "type": "Time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "403": {
            "description": "Not authorized"
          }
        }
      },
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions---format-",
        "summary": "Create subscription",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Unique order id(must be between 4-20 characters)</p>\n",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "invoice_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "invoice_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "invoice_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "invoice_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "invoice_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "invoice_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "invoice_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "invoice_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "invoice_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "invoice_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "invoice_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "invoice_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "invoice_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "invoice_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "shipping_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "shipping_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "shipping_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "shipping_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "shipping_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "shipping_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "shipping_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "shipping_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "shipping_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "shipping_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "shipping_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "shipping_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "shipping_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "shipping_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object",
            "default": {}
          },
          {
            "in": "formData",
            "description": "<p>Currency</p>\n",
            "name": "currency",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Subscription description</p>\n",
            "name": "description",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Used branding id</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "description": "<p>Ids of subscription groups</p>\n",
            "name": "group_ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "default": []
            }
          },
          {
            "in": "formData",
            "description": "<p>Text to be displayed on cardholder’s statement. Max 22 ASCII chars. Currently supported by Clearhaus only.</p>\n",
            "name": "text_on_statement",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop system module name</p>\n",
            "name": "shopsystem[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Shop system module version</p>\n",
            "name": "shopsystem[version]",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/subscriptions/{id}/link": {
      "put": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "PUT-subscriptions--id-link---format-",
        "summary": "Create or update a payment link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Transaction id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Amount to authorize</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Agreement to use. Defaults to the Payment Window agreement</p>\n",
            "name": "agreement_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Language</p>\n",
            "name": "language",
            "required": false,
            "type": "string",
            "default": "en"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after authorize</p>\n",
            "name": "continue_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Url that cardholder is redirected to after cancelation</p>\n",
            "name": "cancel_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Endpoint for async callback</p>\n",
            "name": "callback_url",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Limit payment methods</p>\n",
            "name": "payment_methods",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Add acquirer fee to amount. Default is merchant autofee</p>\n",
            "name": "auto_fee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Override branding. Default is merchant default branding</p>\n",
            "name": "branding_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_tracking_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Send events to Google Analytics</p>\n",
            "name": "google_analytics_client_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Force usage of the given acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Set a deadline in seconds for the cardholder to complete</p>\n",
            "name": "deadline",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Allow opening in iframe</p>\n",
            "name": "framed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Config for branding. Will be merged with the default config in the branding</p>\n",
            "name": "branding_config",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Required for PayPal. Email of customer.</p>\n",
            "name": "customer_email",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Get customer invoice address via acquirer (Currently MobilePay and PayPal only)</p>\n",
            "name": "invoice_address_selection",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Get customer shipping address via acquirer (Currently MobilePay and PayPal only)</p>\n",
            "name": "shipping_address_selection",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10PaymentLinkUrl"
            }
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "DELETE-subscriptions--id-link---format-",
        "summary": "Delete payment link",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Transaction id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "GET-subscriptions--id---format-",
        "summary": "Get subscription",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Maximum number of operations to retrieve</p>\n",
            "name": "operations_size",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "PATCH-subscriptions--id---format-",
        "summary": "Update subscription",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Subscription must be authorized before this time</p>\n",
            "name": "deadline_at",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "body",
            "description": "<p>Ids of subscription groups</p>\n",
            "name": "group_ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "in": "formData",
            "description": "<p>Subscription description</p>\n",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "invoice_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "invoice_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "invoice_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "invoice_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "invoice_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "invoice_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "invoice_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "invoice_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "invoice_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "invoice_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "invoice_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "invoice_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "invoice_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "invoice_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Name</p>\n",
            "name": "shipping_address[name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Att</p>\n",
            "name": "shipping_address[att]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Company name</p>\n",
            "name": "shipping_address[company_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Street</p>\n",
            "name": "shipping_address[street]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House number</p>\n",
            "name": "shipping_address[house_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>House extension</p>\n",
            "name": "shipping_address[house_extension]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>City</p>\n",
            "name": "shipping_address[city]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Zip code</p>\n",
            "name": "shipping_address[zip_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Region</p>\n",
            "name": "shipping_address[region]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Three letter country code according to ISO 3166-1 Alpha-3</p>\n",
            "name": "shipping_address[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>VAT registration number</p>\n",
            "name": "shipping_address[vat_no]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Phone number</p>\n",
            "name": "shipping_address[phone_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "shipping_address[mobile_number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Email address</p>\n",
            "name": "shipping_address[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Custom variables</p>\n",
            "name": "variables",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscriptions/{id}/session": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions--id-session---format-",
        "summary": "Create subscription session",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>When true, fee is calculated and added to the given amount. Default is merchant autofee</p>\n",
            "name": "autofee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/subscriptions/{id}/authorize": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions--id-authorize---format-",
        "summary": "Authorize a subscription",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Vate rate</p>\n",
            "name": "vat_rate",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "in": "formData",
            "description": "<p>Card number</p>\n",
            "name": "card[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Expiration date (YYMM)</p>\n",
            "name": "card[expiration]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>CVD/CVV</p>\n",
            "name": "card[cvd]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Card token</p>\n",
            "name": "card[token]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Apple Pay payment-token</p>\n",
            "name": "card[apple_pay_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>MobilePay Online payment-token</p>\n",
            "name": "card[mobilepay_online_token]",
            "required": false,
            "type": "object"
          },
          {
            "in": "formData",
            "description": "<p>Card holder name</p>\n",
            "name": "card[issued_to]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Brand to use on multi-brand card</p>\n",
            "name": "card[brand]",
            "required": false,
            "type": "string",
            "enum": [
              "american-express",
              "dankort",
              "diners",
              "fbg1886",
              "jcb",
              "maestro",
              "mastercard",
              "mastercard-debet",
              "visa",
              "visa-electron"
            ]
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure status</p>\n",
            "name": "card[status]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure eci</p>\n",
            "name": "card[eci]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure xav</p>\n",
            "name": "card[xav]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>3D-Secure cavv</p>\n",
            "name": "card[cavv]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Mobile number</p>\n",
            "name": "mobile_number",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer NIN Number</p>\n",
            "name": "nin[number]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer country (ISO 3166-1 Alpha-3)</p>\n",
            "name": "nin[country_code]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Customer gender</p>\n",
            "name": "nin[gender]",
            "required": false,
            "type": "string",
            "enum": ["male", "female"]
          },
          {
            "in": "formData",
            "description": "<p>Person first name</p>\n",
            "name": "person[first_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person last name</p>\n",
            "name": "person[last_name]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Person email</p>\n",
            "name": "person[email]",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>If set, will force the use of this acquirer</p>\n",
            "name": "acquirer",
            "required": false,
            "type": "string",
            "enum": [
              "bambora",
              "clearhaus",
              "coinify",
              "elavon",
              "handelsbanken",
              "klarna",
              "klarnapayments",
              "mobilepay",
              "mobilepayonline",
              "mobilepaysubscriptions",
              "nets",
              "paypal",
              "paysafecard",
              "resurs",
              "sofort",
              "swedbank",
              "swish",
              "teller",
              "trustly",
              "valitor",
              "viabill",
              "vipps"
            ]
          },
          {
            "in": "formData",
            "description": "<p>Customer IP</p>\n",
            "name": "customer_ip",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>Additional acquirer specific params</p>\n",
            "name": "extras",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscriptions/{id}/cancel": {
      "post": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions--id-cancel---format-",
        "summary": "Cancel subscription",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Subscription"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscriptions/{id}/recurring": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions--id-recurring---format-",
        "summary": "Create subscription recurring payment",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>DEPRECATED: it will be removed in v11. Disables asynchronious behaviour and returns the transaction with completed operation (ex. see GET /payments/{id}). MUST be used as a query parameter “?synchronized” (value not required)</p>\n",
            "name": "synchronized",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Amount</p>\n",
            "name": "amount",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Unique order id(must be between 4-20 characters)</p>\n",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "description": "<p>When true, payment is captured after authorization. Default is false</p>\n",
            "name": "auto_capture",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>When true, fee is calculated and added to the given amount. Default is merchant autofee</p>\n",
            "name": "autofee",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>(Nets only) When true, will perform an initial authorize of zero, then authorize the full amount on capture. Default is false</p>\n",
            "name": "zero_auth",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "formData",
            "description": "<p>Text to be displayed on cardholder’s statement. This overrides text_on_statement on authorize. Max 22 ASCII chars. Currently supported by Clearhaus only.</p>\n",
            "name": "text_on_statement",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/subscriptions/{id}/fraud-report": {
      "post": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "POST-subscriptions--id-fraud-report---format-",
        "summary": "Create fraud confirmation report",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Specify the callback url (overrides merchant default callback-url)</p>\n",
            "name": "QuickPay-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "\n",
            "name": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10FraudReport"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/subscriptions/{id}/operations/{operation_id}": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "GET-subscriptions--id-operations--operation_id---format-",
        "summary": "Get Operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Operation"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "PATCH-subscriptions--id-operations--operation_id---format-",
        "summary": "Update operation",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "description": "<p>Operations id</p>\n",
            "name": "operation_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "description": "<p>Aborts the operation. Only possible on cancel operations (false is the only allowed value)</p>\n",
            "name": "pending",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Operation"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "428": {
            "description": "Precondition required"
          }
        }
      }
    },
    "/subscriptions/{id}/payments": {
      "get": {
        "produces": [
          "application/xml",
          "application/json",
          "application/octet-stream",
          "text/plain"
        ],
        "tags": ["subscriptions"],
        "operationId": "GET-subscriptions--id-payments---format-",
        "summary": "Get all subscription payments",
        "description": "\n",
        "parameters": [
          {
            "in": "header",
            "description": "<p>Specify the version of the API</p>\n",
            "name": "Accept-Version",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "description": "<p>Use Basic Auth to authorize to the API</p>\n",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "<p>Subscription id</p>\n",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Return accepted payments</p>\n",
            "name": "accepted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "description": "<p>Year</p>\n",
            "name": "date[year]",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "<p>Month</p>\n",
            "name": "date[month]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 12
          },
          {
            "in": "query",
            "description": "<p>Day of the month</p>\n",
            "name": "date[day]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 31
          },
          {
            "in": "query",
            "description": "<p>Hour of the day</p>\n",
            "name": "date[hour]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 23
          },
          {
            "in": "query",
            "description": "<p>Minute of the hour</p>\n",
            "name": "date[minute]",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 59
          },
          {
            "in": "query",
            "description": "<p>Pagination page. Default is 1</p>\n",
            "name": "page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          {
            "in": "query",
            "description": "<p>Items per page. Default is 20</p>\n",
            "name": "page_size",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "description": "<p>Property to sort by</p>\n",
            "name": "sort_by",
            "required": false,
            "type": "string",
            "default": "payment_id",
            "enum": ["payment_id", "order_id"]
          },
          {
            "in": "query",
            "description": "<p>Sort direction</p>\n",
            "name": "sort_dir",
            "required": false,
            "type": "string",
            "default": "desc",
            "enum": ["asc", "desc"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuickPayProtocolV10Payment"
            }
          },
          "403": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "definitions": {
    "QuickPayProtocolV10AcquirerSettings": {
      "properties": {
        "bambora": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsBambora",
          "description": "Bambora settings"
        },
        "clearhaus": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsClearhaus",
          "description": "Clearhaus settings"
        },
        "coinify": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsCoinify",
          "description": "Coinify settings"
        },
        "elavon": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsElavon",
          "description": "Elavon settings"
        },
        "handelsbanken": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsHandelsbanken",
          "description": "Handelsbanken settings"
        },
        "klarna": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarna",
          "description": "Klarna settings"
        },
        "klarnapayments": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsKlarnaPayments",
          "description": "KlarnaPayments settings"
        },
        "mobilepay": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePay",
          "description": "MobilePay settings"
        },
        "mobilepayonline": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePayOnline",
          "description": "MobilePayOnline settings"
        },
        "mobilepaysubscriptions": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsMobilePaySubscriptions",
          "description": "MobilePay Subscription settings"
        },
        "nets": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsNets",
          "description": "Nets settings"
        },
        "paypal": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPayPal",
          "description": "PayPal settings"
        },
        "paysafecard": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsPaysafecard",
          "description": "Paysafecard settings"
        },
        "resurs": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsResurs",
          "description": "Resurs settings"
        },
        "sofort": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSofort",
          "description": "Sofort settings"
        },
        "swedbank": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwedbank",
          "description": "Swedbank settings"
        },
        "swish": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsSwish",
          "description": "Swish settings"
        },
        "teller": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTeller",
          "description": "Teller settings"
        },
        "trustly": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsTrustly",
          "description": "Trustly settings"
        },
        "valitor": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsValitor",
          "description": "Valitor settings"
        },
        "viabill": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsViaBill",
          "description": "ViaBill settings"
        },
        "vipps": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettingsVipps",
          "description": "Vipps settings"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsBambora": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Bambora business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Bambora identification number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Bambora international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Bambora Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Bambora VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsClearhaus": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "api_key": {
          "type": "string",
          "description": "Clearhaus api key"
        },
        "apple_pay": {
          "type": "boolean",
          "description": "True if Apple Pay is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Clearhaus business code(mcc)"
        },
        "mpi_merchant_id": {
          "type": "string",
          "description": "MPI Merchant id used for 3D Secure. This field is maintained by QuickPay."
        },
        "payout": {
          "type": "boolean",
          "description": "True if payout is enabled"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsCoinify": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "api_key": {
          "type": "string",
          "description": "Coinify API key"
        },
        "api_secret": {
          "type": "string",
          "description": "Coinify API secret"
        },
        "ipn_secret": {
          "type": "string",
          "description": "Coinify IPN secret"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsElavon": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Elavon business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Elavon identification number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Elavon international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Elavon Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Elavon VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsHandelsbanken": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Handelsbanken business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Handelsbanken identification number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Handelsbanken international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Handelsbanken Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Handelsbanken VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsKlarna": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "eid": {
          "type": "integer",
          "format": "int32",
          "description": "Klarna merchant id"
        },
        "shared_secret": {
          "type": "string",
          "description": "Klarna shared secret"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsKlarnaPayments": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "password": {
          "type": "string",
          "description": "Klarna password"
        },
        "uid": {
          "type": "string",
          "description": "Klarna username"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsMobilePay": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "delivery_limited_to": {
          "type": "string",
          "description": "MobilePay delivery address selection countries limited to"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsMobilePayOnline": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "delivery_limited_to": {
          "type": "string",
          "description": "MobilePayOnline delivery address selection countries limited to"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the merchant"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsMobilePaySubscriptions": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "auth_state": {
          "type": "string",
          "description": "Identifier MobilePay Subscriptions uses to link requests to callbacks"
        },
        "code_verifier": {
          "type": "string",
          "description": "Verifies received code challenge"
        },
        "last_token_refresh": {
          "type": "integer",
          "format": "int32",
          "description": "Unix-timestamp of last time token was refreshed"
        },
        "nonce": {
          "type": "string",
          "description": "Associate client sessions with ID Tokens to mitigate replay attacks"
        },
        "pending_status": {
          "type": "integer",
          "format": "int32",
          "description": "0: agreement inactive, 1: flow initialised, 2: tokens received, 3: flow completed"
        },
        "provider": {
          "type": "object",
          "description": "The MobilePay Subscriptions provider / sales-place chosen by the merchant"
        },
        "refresh_token": {
          "type": "string",
          "description": "Token to refresh access token for up to 1 year"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsNets": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "(Depricated use Teller acquirer)"
        },
        "business_code": {
          "type": "string",
          "description": "Nets business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "(Depricated use Teller acquirer)"
        },
        "fbg1886": {
          "type": "boolean",
          "description": "True if Forbrugsforeningen is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Nets identification code"
        },
        "identification_code_int": {
          "type": "string",
          "description": "(Depricated use Teller acquirer)"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "(Depricated use Teller acquirer)"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "(Depricated use Teller acquirer)"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "secured_by_nets": {
          "type": "boolean",
          "description": "True if SecuredByNets is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "(Depricated use Teller acquirer)"
        },
        "visa_bin": {
          "type": "string",
          "description": "(Depricated use Teller acquirer)"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "(Depricated use Teller acquirer)"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsPayPal": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "credit_card": {
          "type": "boolean",
          "description": "True if credit-card payments is enabled"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Scopes token grants access to"
        },
        "token": {
          "type": "string",
          "description": "Authentication token"
        },
        "token_secret": {
          "type": "string",
          "description": "Authentication token secret"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsPaysafecard": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "currencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Paysafecard currencies"
        },
        "password": {
          "type": "string",
          "description": "Paysafecard password"
        },
        "username": {
          "type": "string",
          "description": "Paysafecard username"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsResurs": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "customer_id": {
          "type": "string",
          "description": "Resurs user_name"
        },
        "customer_password": {
          "type": "string",
          "description": "Resurs password"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsSofort": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "api_key": {
          "type": "string",
          "description": "Sofort api-key"
        },
        "customer_number": {
          "type": "integer",
          "format": "int32",
          "description": "Sofort customer number"
        },
        "gateway": {
          "type": "boolean",
          "description": "Sofort gateway feature enabled"
        },
        "ideal": {
          "type": "boolean",
          "description": "Sofort iDeal feature enabled"
        },
        "ideal_notification_password": {
          "type": "string",
          "description": "Sofort iDeal notification password"
        },
        "ideal_project_id": {
          "type": "integer",
          "format": "int32",
          "description": "Sofort iDeal project id"
        },
        "ideal_project_password": {
          "type": "string",
          "description": "Sofort iDeal project password"
        },
        "project_id": {
          "type": "integer",
          "format": "int32",
          "description": "Sofort gateway project id"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsSwedbank": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Swedbank business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Swedbank identification number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Swedbank international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Swedbank Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Swedbank VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsSwish": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "cryptography_key_id": {
          "type": "integer",
          "format": "int32",
          "description": "Swish certificate and private-key cryptography key id"
        },
        "merchant_id": {
          "type": "string",
          "description": "Swish merchant id"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsTeller": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Teller business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Teller TOF number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Teller international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Teller Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Teller VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsTrustly": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "ideal": {
          "type": "boolean",
          "description": "iDeal through Trustly"
        },
        "password": {
          "type": "string",
          "description": "Trustly API password"
        },
        "username": {
          "type": "string",
          "description": "Trustly API username"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsValitor": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "americanexpress": {
          "type": "boolean",
          "description": "True if american express is enabled"
        },
        "business_code": {
          "type": "string",
          "description": "Valitor business code"
        },
        "dinersclub": {
          "type": "boolean",
          "description": "True if Diners Club is enabled"
        },
        "identification_code": {
          "type": "string",
          "description": "Valitor identification number"
        },
        "identification_code_int": {
          "type": "string",
          "description": "Valitor international identification number"
        },
        "mastercard_bin": {
          "type": "string",
          "description": "Valitor Mastercard acquirer bin used for 3D Secure"
        },
        "mastercard_mpi_merchant_id": {
          "type": "string",
          "description": "Mastercard MPI Merchant id used for 3D Secure"
        },
        "recurring": {
          "type": "boolean",
          "description": "True if recurring is enabled"
        },
        "securepay": {
          "type": "boolean",
          "description": "True if Teller SecurePay fraud detection is enabled"
        },
        "visa_bin": {
          "type": "string",
          "description": "Valitor VISA acquirer bin used for 3D Secure"
        },
        "visa_mpi_merchant_id": {
          "type": "string",
          "description": "VISA MPI Merchant id used for 3D Secure"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsViaBill": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "api_key": {
          "type": "string",
          "description": "ViaBill api key"
        }
      }
    },
    "QuickPayProtocolV10AcquirerSettingsVipps": {
      "properties": {
        "access_token_subscription_key": {
          "type": "string",
          "description": "Vipps Access-Token Subscription Key"
        },
        "active": {
          "type": "boolean",
          "description": "True if the acquirer is active"
        },
        "client_id": {
          "type": "string",
          "description": "Vipps OAuth Client ID"
        },
        "client_secret": {
          "type": "string",
          "description": "Vipps OAuth Client Secret"
        },
        "ecommerce_subscription_key": {
          "type": "string",
          "description": "Vipps eCommerce Subscription Key"
        },
        "orgno": {
          "type": "string",
          "description": "Vipps company organization number"
        },
        "serial_number": {
          "type": "string",
          "description": "Vipps agreement serial number"
        }
      }
    },
    "QuickPayProtocolV10Address": {
      "properties": {
        "att": {
          "type": "string",
          "description": "Att."
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "country_code": {
          "type": "string",
          "description": "Country code"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "street": {
          "type": "string",
          "description": "Street"
        },
        "vat_no": {
          "type": "string",
          "description": "VAT reg. no."
        },
        "zip_code": {
          "type": "string",
          "description": "Zip code"
        }
      }
    },
    "QuickPayProtocolV10IntegrationSettings": {
      "properties": {
        "economic": {
          "$ref": "#/definitions/QuickPayProtocolV10IntegrationSettingsEconomic",
          "description": "e-conomic settings"
        }
      }
    },
    "QuickPayProtocolV10IntegrationSettingsEconomic": {
      "properties": {
        "active": {
          "type": "boolean",
          "description": "True if the settings are active"
        },
        "agreement": {
          "type": "string",
          "description": "e-conomic agreement id"
        },
        "agreement_token": {
          "type": "string",
          "description": "e-conomic agreement grant token"
        }
      }
    },
    "QuickPayProtocolV10Merchant": {
      "properties": {
        "acquirer_settings": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerSettings",
          "description": "Acquirer settings"
        },
        "allow_test_transactions": {
          "type": "boolean",
          "description": "Allow test transactions"
        },
        "autofee": {
          "type": "boolean",
          "description": "Include acquirer fee on payments"
        },
        "billing_address": {
          "$ref": "#/definitions/QuickPayProtocolV10Address",
          "description": "Billing address"
        },
        "callback_url": {
          "type": "string",
          "description": "Callback url"
        },
        "contact_email": {
          "type": "string",
          "description": "Contact email"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "customer_address": {
          "$ref": "#/definitions/QuickPayProtocolV10Address",
          "description": "Customer address"
        },
        "default_branding_config": {
          "type": "object",
          "description": "Default branding config"
        },
        "default_branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of default branding, or null"
        },
        "default_payment_language": {
          "type": "string",
          "description": "Default payment language (Two letter language code, ISO-639-1)"
        },
        "default_payment_methods": {
          "type": "string",
          "description": "Comma separated list of default payment methods"
        },
        "default_text_on_statement": {
          "type": "string",
          "description": "Text to be displayed on cardholder's statement. Currently supported by Clearhaus only"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "integration_settings": {
          "$ref": "#/definitions/QuickPayProtocolV10IntegrationSettings",
          "description": "Integration settings"
        },
        "locale": {
          "type": "string",
          "description": "Locale"
        },
        "logging_stops_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when logging is active "
        },
        "pci": {
          "$ref": "#/definitions/QuickPayProtocolV10PciSettings",
          "description": "PCI settings"
        },
        "reseller": {
          "$ref": "#/definitions/QuickPayProtocolV10MerchantReseller",
          "description": "Reseller of Merchant"
        },
        "shop_name": {
          "type": "string",
          "description": "Shop name"
        },
        "shop_url": {
          "type": "string",
          "description": "Shop url (deprecated, use shop_urls instead)"
        },
        "shop_urls": {
          "type": "array",
          "items": {},
          "description": "Shop urls"
        },
        "shopsystem": {
          "type": "string",
          "description": "Shop system"
        },
        "suspended_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when merchant was suspended or null if it is not suspended"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone"
        },
        "type": {
          "type": "string",
          "description": "Type of account"
        }
      }
    },
    "QuickPayProtocolV10MerchantReseller": {
      "properties": {
        "default_branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of default branding, or null"
        },
        "default_payment_methods": {
          "type": "string",
          "description": "Comma separated list of default payment methods"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "support_email": {
          "type": "string",
          "description": "Email address to reseller for support"
        }
      }
    },
    "QuickPayProtocolV10PciSettings": {
      "properties": {
        "saq_a": {
          "type": "boolean",
          "description": "true if SAQ A is set"
        },
        "saq_a_ep": {
          "type": "boolean",
          "description": "true if SAQ A-EP is set"
        },
        "saq_b": {
          "type": "boolean",
          "description": "true if SAQ B is set"
        },
        "saq_b_ip": {
          "type": "boolean",
          "description": "true if SAQ B-IP is set"
        },
        "saq_c": {
          "type": "boolean",
          "description": "true if SAQ C is set"
        },
        "saq_c_vt": {
          "type": "boolean",
          "description": "true if SAQ C-VT is set"
        },
        "saq_d_merchant": {
          "type": "boolean",
          "description": "true if SAQ D Merchant is set"
        },
        "saq_d_service_provider": {
          "type": "boolean",
          "description": "true if SAQ D Service Provider is set"
        },
        "saq_p2pe_hw": {
          "type": "boolean",
          "description": "true if SAQ P2PE-HW is set"
        }
      }
    },
    "QuickPayProtocolV10PrivateKey": {
      "properties": {
        "private_key": {
          "type": "string",
          "description": "The private key"
        }
      }
    },
    "QuickPayProtocolV10Zero4PlatformSettings": {
      "properties": {
        "phone": {
          "type": "string",
          "description": "04 merchant phone"
        },
        "secret": {
          "type": "string",
          "description": "04 merchant secret"
        }
      }
    },
    "QuickPayProtocolV10AcquirerTest": {
      "properties": {
        "details": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestDetails",
          "description": "Test result details"
        },
        "success": {
          "type": "boolean",
          "description": "All tests successful?"
        }
      }
    },
    "QuickPayProtocolV10AcquirerTestDetails": {
      "properties": {
        "3d_secure": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "3d_secure test status"
        },
        "dankort": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "dankort test status"
        },
        "diners": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "diners test status"
        },
        "fbg1886": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "fbg1886 test status"
        },
        "mastercard": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "mastercard test status"
        },
        "recurring": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "recurring test status"
        },
        "visa": {
          "$ref": "#/definitions/QuickPayProtocolV10AcquirerTestResult",
          "description": "visa test status"
        }
      }
    },
    "QuickPayProtocolV10AcquirerTestResult": {
      "properties": {
        "currency": {
          "type": "string",
          "description": "Tested currency"
        },
        "message": {
          "type": "string",
          "description": "Test message"
        },
        "success": {
          "type": "boolean",
          "description": "Test successful?"
        }
      }
    },
    "QuickPayProtocolV10Card": {
      "required": ["variables"],
      "properties": {
        "accepted": {
          "type": "boolean",
          "description": "Accepted by acquirer"
        },
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed the card"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Card id"
        },
        "link": {
          "$ref": "#/definitions/QuickPayProtocolV10CardLink",
          "description": "Sharable link to payment window"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Merchant id"
        },
        "metadata": {
          "$ref": "#/definitions/QuickPayProtocolV10Metadata",
          "description": "Card metadata"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10CardOperation"
          },
          "description": "Operations"
        },
        "test_mode": {
          "type": "boolean",
          "description": "Test mode"
        },
        "type": {
          "type": "string",
          "enum": ["Card"],
          "description": "Type of transaction"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom variables"
        }
      }
    },
    "QuickPayProtocolV10CardLink": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Force usage of this acquirer"
        },
        "agreement_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of agreement that will be used in the payment window"
        },
        "branding_config": {
          "type": "object",
          "description": "Branding config"
        },
        "branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "The branding to use in the payment window"
        },
        "callbackurl": {
          "type": "string",
          "description": "Endpoint for a POST callback"
        },
        "cancelurl": {
          "type": "string",
          "description": "Where cardholder is redirected after cancel"
        },
        "continueurl": {
          "type": "string",
          "description": "Where cardholder is redirected after success"
        },
        "framed": {
          "type": "boolean",
          "description": "Allowed in iframe"
        },
        "google_analytics_client_id": {
          "type": "string",
          "description": "Set this to enable Google Analytics events from the payment window"
        },
        "google_analytics_tracking_id": {
          "type": "string",
          "description": "Set this to enable Google Analytics events from the payment window"
        },
        "language": {
          "type": "string",
          "description": "Two letter language code that determines the language of the payment window"
        },
        "payment_methods": {
          "type": "string",
          "description": "Lock to these payment methods"
        },
        "url": {
          "type": "string",
          "description": "Url to payment window for this payment link"
        },
        "version": {
          "type": "string",
          "description": "Version of payment window and API"
        }
      }
    },
    "QuickPayProtocolV10CardLinkUrl": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Url to payment window for this card link"
        }
      }
    },
    "QuickPayProtocolV10CardOperation": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed this operation"
        },
        "aq_status_code": {
          "type": "string",
          "description": "Acquirer status code"
        },
        "aq_status_msg": {
          "type": "string",
          "description": "Acquirer status message"
        },
        "callback_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of callback"
        },
        "callback_duration": {
          "type": "integer",
          "format": "int32",
          "description": "Callback duration (ms)"
        },
        "callback_response_code": {
          "type": "boolean",
          "description": "The http response code from the callback operation"
        },
        "callback_success": {
          "type": "boolean",
          "description": "Did the callback succeed"
        },
        "callback_url": {
          "type": "string",
          "description": "Operation callback url"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Operation ID"
        },
        "pending": {
          "type": "boolean",
          "description": "If the operation is pending"
        },
        "qp_status_code": {
          "type": "string",
          "description": "QuickPay status code"
        },
        "qp_status_msg": {
          "type": "string",
          "description": "QuickPay status message"
        },
        "type": {
          "type": "string",
          "description": "Type of operation"
        }
      }
    },
    "QuickPayProtocolV10CardToken": {
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "is_used": {
          "type": "boolean",
          "description": "Token used"
        },
        "token": {
          "type": "string",
          "description": "Card token"
        }
      }
    },
    "QuickPayProtocolV10FraudReport": {
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Report creation date"
        },
        "description": {
          "type": "string",
          "description": "Report description"
        }
      }
    },
    "QuickPayProtocolV10Metadata": {
      "properties": {
        "bin": {
          "type": "string",
          "description": "Card type only: Card BIN"
        },
        "brand": {
          "type": "string",
          "description": "Card type only: The card brand"
        },
        "corporate": {
          "type": "boolean",
          "description": "Card type only: Corporate status"
        },
        "country": {
          "type": "string",
          "description": "Card type only: The card country in ISO 3166-1 alpha-3"
        },
        "customer_country": {
          "type": "string",
          "description": "Customer country based on IP geo-data, ISO 3166-1 alpha-2"
        },
        "customer_ip": {
          "type": "string",
          "description": "Customer IP"
        },
        "exp_month": {
          "type": "integer",
          "format": "int32",
          "description": "Card type only: The expiration month"
        },
        "exp_year": {
          "type": "integer",
          "format": "int32",
          "description": "Card type only: The expiration year (YYYY)"
        },
        "fraud_remarks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fraud remarks"
        },
        "fraud_report_description": {
          "type": "string",
          "description": "Fraud report description"
        },
        "fraud_reported": {
          "type": "boolean",
          "description": "Reported as fraudulent"
        },
        "fraud_reported_at": {
          "type": "string",
          "description": "Fraud report description"
        },
        "fraud_suspected": {
          "type": "boolean",
          "description": "Suspected fraud"
        },
        "hash": {
          "type": "string",
          "description": "Card type only: PCI safe hash of card number"
        },
        "is_3d_secure": {
          "type": "string",
          "description": "Card type only: Verified via 3D-Secure"
        },
        "issued_to": {
          "type": "string",
          "description": "Name of cardholder"
        },
        "last4": {
          "type": "string",
          "description": "Card type only: The last 4 digits of the card number"
        },
        "nin_country_code": {
          "type": "string",
          "description": "NIN type only. NIN country code, ISO 3166-1 alpha-3"
        },
        "nin_gender": {
          "type": "string",
          "description": "NIN type only. NIN gender"
        },
        "nin_number": {
          "type": "string",
          "description": "NIN type only. NIN number"
        },
        "number": {
          "type": "string",
          "description": "Mobile type only: The mobile number"
        },
        "origin": {
          "type": "string",
          "description": "Origin of this transaction or card. If set, describes where it came from."
        },
        "shopsystem_name": {
          "type": "string",
          "description": "Shop system module name"
        },
        "shopsystem_version": {
          "type": "string",
          "description": "Shop system module version"
        },
        "type": {
          "type": "string",
          "enum": ["card", "mobile", "nin"],
          "description": "Type"
        }
      }
    },
    "QuickPayProtocolV10AclPermission": {
      "properties": {
        "delete": {
          "type": "boolean",
          "description": "Allow DELETE"
        },
        "get": {
          "type": "boolean",
          "description": "Allow GET"
        },
        "patch": {
          "type": "boolean",
          "description": "Allow PATCH"
        },
        "post": {
          "type": "boolean",
          "description": "Allow POST"
        },
        "put": {
          "type": "boolean",
          "description": "Allow PUT"
        },
        "resource": {
          "type": "string",
          "description": "Resource URI"
        }
      }
    },
    "QuickPayProtocolV10Activity": {
      "properties": {
        "account_id": {
          "type": "integer",
          "format": "int32",
          "description": "Activity performed on"
        },
        "action": {
          "type": "string",
          "description": "Activity action"
        },
        "changes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Activity changes"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of activity"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Extra data"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "support": {
          "type": "boolean",
          "description": "Whether activity was created by a supporter"
        },
        "target_id": {
          "type": "integer",
          "format": "int32",
          "description": "Activity target id"
        },
        "target_type": {
          "type": "string",
          "description": "Activity target"
        },
        "user_id": {
          "type": "integer",
          "format": "int32",
          "description": "Activity performed by"
        }
      }
    },
    "QuickPayProtocolV10Agreement": {
      "properties": {
        "accepted": {
          "type": "boolean",
          "description": "Is agreement accepted by user"
        },
        "account": {
          "$ref": "#/definitions/QuickPayProtocolV10AgreementAccount",
          "description": "Account details"
        },
        "acl_permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10AclPermission"
          },
          "description": "ACL permissions"
        },
        "api_key": {
          "type": "string",
          "description": "API key. This will show as null unless it is owned by your user or by a system user"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "ip_restriction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10IPRestriction"
          },
          "description": "IP restriction"
        },
        "locked": {
          "type": "boolean",
          "description": "If true, the agreement can not be changed"
        },
        "owner": {
          "type": "boolean",
          "description": "Is account owner"
        },
        "service": {
          "type": "string",
          "description": "Service name (only for system/service agreements)"
        },
        "support": {
          "type": "boolean",
          "description": "Support agreement"
        },
        "user": {
          "$ref": "#/definitions/QuickPayProtocolV10AgreementUser",
          "description": "User details"
        }
      }
    },
    "QuickPayProtocolV10AgreementAccount": {
      "properties": {
        "callback_url": {
          "type": "string",
          "description": "Callback URL (Merchant only)"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "shop_name": {
          "type": "string",
          "description": "Shop name (Merchant only)"
        },
        "type": {
          "type": "string",
          "description": "Type of account, e.g. \"Merchant\""
        }
      }
    },
    "QuickPayProtocolV10AgreementUser": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of user"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of user"
        },
        "name": {
          "type": "string",
          "description": "Name of user. Will be hidden until user has accepted agreement."
        },
        "system_user": {
          "type": "boolean",
          "description": "If true, this user should only be used for api-access and services. Not to log into manager"
        }
      }
    },
    "QuickPayProtocolV10IPRestriction": {
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address"
        }
      }
    },
    "QuickPayProtocolV10AclResource": {
      "properties": {
        "account_type": {
          "type": "string",
          "description": "Account type that this resource applies to"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
          "description": "The valid http verbs for this resource"
        },
        "description": {
          "type": "string",
          "description": "Description of the resource"
        },
        "resource": {
          "type": "string",
          "description": "Path to the resource"
        }
      }
    },
    "QuickPayProtocolV10Branding": {
      "properties": {
        "account_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the account that owns the branding"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10BrandingResource"
          },
          "description": "Resources"
        }
      }
    },
    "QuickPayProtocolV10BrandingResource": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Binary data encoded in Base64"
        },
        "mime": {
          "type": "string",
          "description": "Mime type"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "size": {
          "type": "string",
          "description": "Size in bytes"
        }
      }
    },
    "QuickPayProtocolV10AcquirerStatus": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Acquirer"
        },
        "health": {
          "type": "integer",
          "format": "int32",
          "description": "Health of the acquirer in %"
        },
        "status": {
          "type": "string",
          "description": "Status of the acquirer. Can be 'ok', 'irregular' or 'down'"
        }
      }
    },
    "QuickPayProtocolV10Pong": {
      "properties": {
        "msg": {
          "type": "string",
          "description": "Friendly message"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Echo params send in the request"
        },
        "scope": {
          "type": "string",
          "enum": ["anonymous", "user", "merchant", "reseller"],
          "description": "API scope"
        },
        "version": {
          "type": "string",
          "description": "The version ('v10')"
        }
      }
    },
    "QuickPayProtocolV10MerchantCryptographyKey": {
      "properties": {
        "certificate_expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate expiration timestamp"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "KMS id"
        },
        "public_key_hash": {
          "type": "string",
          "description": "Public Key identification hash"
        },
        "short_description": {
          "type": "string",
          "description": "Short description"
        },
        "type": {
          "type": "string",
          "description": "Key type (ec/rsa)"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of update"
        }
      }
    },
    "QuickPayProtocolV10CalculatedFee": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Acquirer"
        },
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount that the fee is calculated from"
        },
        "fee": {
          "type": "integer",
          "format": "int32",
          "description": "The calculated fee in smallest unit"
        },
        "formula": {
          "type": "string",
          "description": "The formula"
        },
        "payment_method": {
          "type": "string",
          "description": "Payment method"
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Amount + Fee"
        }
      }
    },
    "QuickPayProtocolV10FeeFormula": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Acquirer"
        },
        "formula": {
          "type": "string",
          "description": "The formula"
        },
        "payment_method": {
          "type": "string",
          "description": "Payment method"
        },
        "standard": {
          "type": "boolean",
          "description": "True if this is the standard fee formula"
        }
      }
    },
    "QuickPayProtocolV10FraudFilterRule": {
      "properties": {
        "metric_name": {
          "type": "string",
          "description": "The variable metric this rule applies to"
        },
        "operator": {
          "type": "string",
          "description": "The operator (==, !=, <, <=, >, >=, in, not_in)"
        },
        "value": {
          "type": "string",
          "description": "The string representation of the value used for comparison with the metric. E.g. '42' or 'DNK'"
        }
      }
    },
    "QuickPayProtocolV10FraudRuleset": {
      "properties": {
        "action": {
          "type": "string",
          "description": "The action that happens if this ruleset is triggered (nothing, flag, force_3d or block)"
        },
        "combinator": {
          "type": "string",
          "description": "The method used to combine filter rules (and, or)"
        },
        "filter_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10FraudFilterRule"
          },
          "description": "The rules of the ruleset"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique id"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Owner of the ruleset"
        },
        "name": {
          "type": "string",
          "description": "Descriptive name"
        }
      }
    },
    "QuickPayProtocolV10PaymentMethodPriority": {
      "properties": {
        "payment_method_priority": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Payment method priority"
        }
      }
    },
    "QuickPayProtocolV10Basket": {
      "properties": {
        "item_name": {
          "type": "string",
          "description": "Item name"
        },
        "item_no": {
          "type": "string",
          "description": "Item number (SKU)"
        },
        "item_price": {
          "type": "integer",
          "format": "int32",
          "description": "Item price"
        },
        "qty": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity"
        },
        "vat_rate": {
          "type": "number",
          "format": "float",
          "description": "VAT rate"
        }
      }
    },
    "QuickPayProtocolV10Operation": {
      "properties": {
        "3d_secure_status": {
          "type": "string",
          "description": "3D Secure status"
        },
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed this operation"
        },
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount"
        },
        "aq_status_code": {
          "type": "string",
          "description": "Acquirer status code"
        },
        "aq_status_msg": {
          "type": "string",
          "description": "Acquirer status message"
        },
        "callback_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of callback"
        },
        "callback_duration": {
          "type": "integer",
          "format": "int32",
          "description": "Callback duration (ms)"
        },
        "callback_response_code": {
          "type": "boolean",
          "description": "The http response code from the callback operation"
        },
        "callback_success": {
          "type": "boolean",
          "description": "Did the callback succeed"
        },
        "callback_url": {
          "type": "string",
          "description": "Operation callback url"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Acquirer specific data"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Operation ID"
        },
        "pending": {
          "type": "boolean",
          "description": "If the operation is pending"
        },
        "qp_status_code": {
          "type": "string",
          "description": "QuickPay status code"
        },
        "qp_status_msg": {
          "type": "string",
          "description": "QuickPay status message"
        },
        "type": {
          "type": "string",
          "description": "Type of operation"
        }
      }
    },
    "QuickPayProtocolV10OptionalAddress": {
      "properties": {
        "att": {
          "type": "string",
          "description": "Att."
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "company_name": {
          "type": "string",
          "description": "Company name"
        },
        "country_code": {
          "type": "string",
          "description": "Country code"
        },
        "email": {
          "type": "string",
          "description": "E-mail address"
        },
        "house_extension": {
          "type": "string",
          "description": "House extension"
        },
        "house_number": {
          "type": "string",
          "description": "House number"
        },
        "mobile_number": {
          "type": "string",
          "description": "Mobile number"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "street": {
          "type": "string",
          "description": "Street"
        },
        "vat_no": {
          "type": "string",
          "description": "VAT reg. no."
        },
        "zip_code": {
          "type": "string",
          "description": "Zip code"
        }
      }
    },
    "QuickPayProtocolV10Payment": {
      "required": ["branding_id", "variables"],
      "properties": {
        "accepted": {
          "type": "boolean",
          "description": "Accepted by acquirer"
        },
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed the transaction"
        },
        "balance": {
          "type": "integer",
          "format": "int32",
          "description": "Balance"
        },
        "basket": {
          "$ref": "#/definitions/QuickPayProtocolV10Basket",
          "description": "Order items"
        },
        "branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "Branding id"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "currency": {
          "type": "string",
          "description": "Currency"
        },
        "deadline_at": {
          "type": "string",
          "format": "date-time",
          "description": "Authorize deadline"
        },
        "facilitator": {
          "type": "string",
          "description": "Facilitator that facilitated the transaction"
        },
        "fee": {
          "type": "integer",
          "format": "int32",
          "description": "Fee added to authorization amount (only relevant on auto-fee)"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id"
        },
        "invoice_address": {
          "$ref": "#/definitions/QuickPayProtocolV10OptionalAddress",
          "description": "Invoice address set on payment creation"
        },
        "link": {
          "$ref": "#/definitions/QuickPayProtocolV10PaymentLink",
          "description": "PaymentLink"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Merchant id"
        },
        "metadata": {
          "$ref": "#/definitions/QuickPayProtocolV10Metadata",
          "description": "Metadata"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10Operation"
          },
          "description": "Operations"
        },
        "order_id": {
          "type": "string",
          "description": "Order number"
        },
        "retented_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of retention"
        },
        "shipping": {
          "$ref": "#/definitions/QuickPayProtocolV10Shipping",
          "description": "Shipping"
        },
        "shipping_address": {
          "$ref": "#/definitions/QuickPayProtocolV10OptionalAddress",
          "description": "Shipping address set on payment creation"
        },
        "state": {
          "type": "string",
          "enum": ["initial", "pending", "new", "rejected", "processed"],
          "description": "State of transaction"
        },
        "subscription_id": {
          "type": "integer",
          "format": "int32",
          "description": "Parent subscription id (only recurring)"
        },
        "test_mode": {
          "type": "boolean",
          "description": "Test mode"
        },
        "text_on_statement": {
          "type": "string",
          "description": "Text on statement"
        },
        "type": {
          "type": "string",
          "description": "transaction type"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last updated"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom variables"
        }
      }
    },
    "QuickPayProtocolV10PaymentLink": {
      "properties": {
        "acquirer": {
          "type": "string",
          "description": "Force usage of this acquirer"
        },
        "agreement_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of agreement that will be used in the payment window"
        },
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount to authorize."
        },
        "auto_capture": {
          "type": "boolean",
          "description": "If true, will capture the transaction after authorize succeeds"
        },
        "auto_fee": {
          "type": "boolean",
          "description": "If true, will add acquirer fee to the amount"
        },
        "branding_config": {
          "type": "object",
          "description": "Branding config"
        },
        "branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "The branding to use in the payment window"
        },
        "callback_url": {
          "type": "string",
          "description": "Endpoint for a POST callback"
        },
        "cancel_url": {
          "type": "string",
          "description": "Where cardholder is redirected after cancel"
        },
        "continue_url": {
          "type": "string",
          "description": "Where cardholder is redirected after success"
        },
        "customer_email": {
          "type": "string",
          "description": "PayPal specific: Customer email"
        },
        "deadline": {
          "type": "string",
          "description": "Deadline in seconds for the cardholder to complete"
        },
        "framed": {
          "type": "boolean",
          "description": "Allow in iframe"
        },
        "google_analytics_client_id": {
          "type": "string",
          "description": "Set this to enable Google Analytics events from the payment window"
        },
        "google_analytics_tracking_id": {
          "type": "string",
          "description": "Set this to enable Google Analytics events from the payment window"
        },
        "invoice_address_selection": {
          "type": "boolean",
          "description": "Get customer invoice address via acquirer (Currently MobilePay and PayPal only)"
        },
        "language": {
          "type": "string",
          "description": "Two letter language code that determines the language of the payment window"
        },
        "payment_methods": {
          "type": "string",
          "description": "Lock to these payment methods"
        },
        "shipping_address_selection": {
          "type": "boolean",
          "description": "Get customer shipping address via acquirer (Currently MobilePay and PayPal only)"
        },
        "url": {
          "type": "string",
          "description": "Url to payment window for this payment link"
        },
        "version": {
          "type": "string",
          "description": "Version of payment window and API"
        }
      }
    },
    "QuickPayProtocolV10PaymentLinkUrl": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Url to payment window for this payment link"
        }
      }
    },
    "QuickPayProtocolV10Shipping": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Delivery price"
        },
        "company": {
          "type": "string",
          "description": "Delivery company"
        },
        "method": {
          "type": "string",
          "description": "Delivery method"
        },
        "tracking_number": {
          "type": "string",
          "description": "Tracking number"
        },
        "tracking_url": {
          "type": "string",
          "description": "Link to delivery status page"
        },
        "vat_rate": {
          "type": "number",
          "format": "float",
          "description": "Delivery VAT rate"
        }
      }
    },
    "QuickPayProtocolV10Payout": {
      "required": ["branding_id", "variables"],
      "properties": {
        "accepted": {
          "type": "boolean",
          "description": "Accepted by acquirer"
        },
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed the transaction"
        },
        "balance": {
          "type": "integer",
          "format": "int32",
          "description": "Balance"
        },
        "branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "Branding id"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "currency": {
          "type": "string",
          "description": "Currency"
        },
        "facilitator": {
          "type": "string",
          "description": "Facilitator that facilitated the transaction"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id"
        },
        "link": {
          "$ref": "#/definitions/QuickPayProtocolV10PaymentLink",
          "description": "PaymentLink"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Merchant id"
        },
        "metadata": {
          "$ref": "#/definitions/QuickPayProtocolV10Metadata",
          "description": "Metadata"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10Operation"
          },
          "description": "Operations"
        },
        "order_id": {
          "type": "string",
          "description": "Order number"
        },
        "retented_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of retention"
        },
        "state": {
          "type": "string",
          "enum": ["initial", "pending", "new", "rejected", "processed"],
          "description": "State of transaction"
        },
        "test_mode": {
          "type": "boolean",
          "description": "Test mode"
        },
        "text_on_statement": {
          "type": "string",
          "description": "Text on statement"
        },
        "type": {
          "type": "string",
          "description": "transaction type"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last updated"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom variables"
        }
      }
    },
    "QuickPayProtocolV10SubscriptionGroup": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount that is captured on each capture"
        },
        "currency": {
          "type": "string",
          "description": "Currency of the amount"
        },
        "description": {
          "type": "string",
          "description": "Description of the group"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the merchant that owns the group"
        },
        "name": {
          "type": "string",
          "description": "Name of the group"
        }
      }
    },
    "QuickPayProtocolV10SubscriptionGroupResult": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message if anything went wrong, else null"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP status code of recurring enqueue request"
        },
        "subscription_id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of subscription"
        }
      }
    },
    "QuickPayProtocolV10Subscription": {
      "required": ["branding_id", "variables"],
      "properties": {
        "accepted": {
          "type": "boolean",
          "description": "Accepted by acquirer"
        },
        "acquirer": {
          "type": "string",
          "description": "Acquirer that processed the transaction"
        },
        "basket": {
          "$ref": "#/definitions/QuickPayProtocolV10Basket",
          "description": "Order items"
        },
        "branding_id": {
          "type": "integer",
          "format": "int32",
          "description": "Branding id"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of creation"
        },
        "currency": {
          "type": "string",
          "description": "Currency"
        },
        "deadline_at": {
          "type": "string",
          "format": "date-time",
          "description": "Authorize deadline"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "facilitator": {
          "type": "string",
          "description": "Facilitator that facilitated the transaction"
        },
        "group_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Ids of subscription groups"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id"
        },
        "invoice_address": {
          "$ref": "#/definitions/QuickPayProtocolV10OptionalAddress",
          "description": "Invoice address set on payment creation"
        },
        "link": {
          "$ref": "#/definitions/QuickPayProtocolV10PaymentLink",
          "description": "PaymentLink"
        },
        "merchant_id": {
          "type": "integer",
          "format": "int32",
          "description": "Merchant id"
        },
        "metadata": {
          "$ref": "#/definitions/QuickPayProtocolV10Metadata",
          "description": "Metadata"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuickPayProtocolV10Operation"
          },
          "description": "Operations"
        },
        "order_id": {
          "type": "string",
          "description": "Order number"
        },
        "retented_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of retention"
        },
        "shipping": {
          "$ref": "#/definitions/QuickPayProtocolV10Shipping",
          "description": "Shipping"
        },
        "shipping_address": {
          "$ref": "#/definitions/QuickPayProtocolV10OptionalAddress",
          "description": "Shipping address set on payment creation"
        },
        "state": {
          "type": "string",
          "enum": ["initial", "pending", "new", "rejected", "processed"],
          "description": "State of transaction"
        },
        "test_mode": {
          "type": "boolean",
          "description": "Test mode"
        },
        "text_on_statement": {
          "type": "string",
          "description": "Text on statement"
        },
        "type": {
          "type": "string",
          "description": "transaction type"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of last updated"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom variables"
        }
      }
    }
  }
}
